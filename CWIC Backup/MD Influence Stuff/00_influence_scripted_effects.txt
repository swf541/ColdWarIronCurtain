# Author(s): Angriest Bird, Kal, SWF51, Killerrabit

# init_influence:
# The init influence acts as a reset to get an influence array prepared for additions
init_influence = {
	clear_array = influence_array_val
	clear_array = influence_array
}

startup_influence = {
	sort_influence = yes #the rest is on_startup
}

recalculate_influence = {
	hidden_effect = {
		sort_influence = yes
		calculate_influence_percentage = yes
		delete_influencer_check = yes
	}
}

# sort_influence:
# The sort influence method handles the sorting and sequential placement of values in the influence array
sort_influence = {
	# Creation of temp arrays.
	# The arrays are "copied" from influence_array and influence_array_val for sorting
	resize_temp_array = {
		array = influence_array_val_temp
		size = influence_array_val^num
	}
	resize_temp_array = {
		array = influence_array_temp
		size = influence_array_val^num
	}
	# Sort the values by largest influencer
	for_loop_effect = {
		end = influence_array_val^num
		value = v
		find_highest_in_array = {
			array = influence_array_val
			value = max
			index = max_index
		}
		set_temp_variable = { influence_array_val_temp^v = max } #sets biggest at the earliest available position
		set_temp_variable = { influence_array_temp^v = influence_array^max_index } #sets biggest TAG at the earliest available position
		set_variable = { influence_array_val^max_index = -1 } #removes it from selection
	}

	# Clears the Values
	init_influence = yes

	set_temp_variable = { influence_total = 0 }
	# Restores destroyed arrays in the above process - i.e. if they were deleted due to being less then 1%
	for_each_loop = {
		array = influence_array_val_temp
		add_to_array = { influence_array_val = v }
		add_to_temp_variable = { influence_total = v }
	}
	add_to_temp_variable = { influence_total = domestic_influence_amount }
	for_each_loop = {
		array = influence_array_temp
		add_to_array = { influence_array = v }
	}
	clear_temp_array = influence_array_val_temp
	clear_temp_array = influence_array_temp

	set_temp_variable = { new_influence_scalar = 100 }
	divide_temp_variable = { new_influence_scalar = influence_total }
	multiply_variable = { domestic_influence_amount = new_influence_scalar }
	clamp_variable = { var = domestic_influence_amount max = 100 min = 0 }
	for_each_loop = {
		array = influence_array_val
		value = v
		index = i
		multiply_variable = { influence_array_val^i = new_influence_scalar }
		clamp_variable = { var = influence_array_val^i max = 100 min = 0 }
	}

	add_to_temp_variable = { new_influence_total = domestic_influence_amount }
	for_each_loop = {
		array = influence_array_val
		value = v
		index = i
		add_to_temp_variable = { new_influence_total = v }
	}

	if = { limit = { NOT = { check_variable = { new_influence_total = 100 } } }
		set_temp_variable = { difference = 100 }
		subtract_from_temp_variable = { difference = new_influence_total }
		add_to_variable = { domestic_influence_amount = difference }
	}
}

calculate_influence_percentage = {
	set_temp_variable = { influence_democratic = 0 }
	set_temp_variable = { influence_neutrality = 0 }
	set_temp_variable = { influence_communism = 0 }
	set_temp_variable = { influence_nationalist = 0 }
	set_temp_variable = { influence_fascism = 0 }
	set_temp_variable = { influence_conservative = 0 }
	set_temp_variable = { influence_Liberal_Conservatism = 0 }
	set_temp_variable = { influence_Christian_Democratic = 0 }
	set_temp_variable = { influence_socialist = 0 }
	set_temp_variable = { influence_Social_Democratic = 0 }
	set_temp_variable = { influence_Social_Liberalism = 0 }
	set_temp_variable = { influence_centrist = 0 }
	set_temp_variable = { influence_liberal = 0 }
	set_temp_variable = { influence_trotskyism = 0 }
	set_temp_variable = { influence_maoism = 0 }
	set_temp_variable = { influence_monarchism = 0 }
	set_temp_variable = { influence_islamism = 0 }
	set_temp_variable = { influence_radical_shiaism = 0 }
	set_temp_variable = { influence_Salafism = 0 }



	for_loop_effect = {
		end = influence_array_val^num
		if = {
			limit = { var:influence_array^v = { has_government = democratic } }
			add_to_temp_variable = { influence_democratic = influence_array_val^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = neutrality } }
			add_to_temp_variable = { influence_neutrality = influence_array_val^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = communism } }
			add_to_temp_variable = { influence_communism = influence_array_val^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = nationalist } }
			add_to_temp_variable = { influence_nationalist = influence_array_val^v }
		}
		else_if = {
			limit = { var:influence_array^v = { has_government = fascism } }
			add_to_temp_variable = { influence_fascism = influence_array_val^v }
		}
        else_if = {
            limit = { var:influence_array^v = { has_government = conservative } }
            add_to_temp_variable = { influence_conservative = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = Liberal_Conservatism } }
            add_to_temp_variable = { influence_Liberal_Conservatism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = Christian_Democratic } }
            add_to_temp_variable = { influence_Christian_Democratic = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = socialist } }
            add_to_temp_variable = { influence_socialist = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = Social_Democratic } }
            add_to_temp_variable = { influence_Social_Democratic = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = Social_Liberalism } }
            add_to_temp_variable = { influence_Social_Liberalism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = centrist } }
            add_to_temp_variable = { influence_centrist = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = liberal } }
            add_to_temp_variable = { influence_liberal = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = trotskyism } }
            add_to_temp_variable = { influence_trotskyism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = maoism } }
            add_to_temp_variable = { influence_maoism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = monarchism } }
            add_to_temp_variable = { influence_monarchism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = islamism } }
            add_to_temp_variable = { influence_islamism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { radical_shiaism = democratic } }
            add_to_temp_variable = { influence_radical_shiaism = influence_array_val^v }
        }
        else_if = {
            limit = { var:influence_array^v = { has_government = Salafism } }
            add_to_temp_variable = { influence_Salafism = influence_array_val^v }
        }
	}

	## see ideology_drifts.txt: ###
	clear_influence_count_ideas = yes

	if = { limit = { check_variable = { influence_democratic > 0.04 } } reset_democratic_influence_ideas = yes }
	if = { limit = { check_variable = { influence_neutrality > 0.04 } } reset_neutrality_influence_ideas = yes }
	if = { limit = { check_variable = { influence_communism > 0.04 } } reset_communism_influence_ideas = yes }
	if = { limit = { check_variable = { influence_nationalist > 0.04 } } reset_nationalist_influence_ideas = yes }
	if = { limit = { check_variable = { influence_fascism > 0.04 } } reset_fascism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_conservative > 0.04 } } reset_conservative_influence_ideas = yes }
    if = { limit = { check_variable = { influence_Liberal_Conservatism > 0.04 } } reset_Liberal_Conservatism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_Christian_Democratic > 0.04 } } reset_Christian_Democratic_influence_ideas = yes }
    if = { limit = { check_variable = { influence_socialist > 0.04 } } reset_socialist_influence_ideas = yes }
    if = { limit = { check_variable = { influence_Social_Democratic > 0.04 } } reset_Social_Democratic_influence_ideas = yes }
    if = { limit = { check_variable = { influence_Social_Liberalism > 0.04 } } reset_Social_Liberalism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_centrist > 0.04 } } reset_centrist_influence_ideas = yes }
    if = { limit = { check_variable = { influence_liberal > 0.04 } } reset_liberal_influence_ideas = yes }
    if = { limit = { check_variable = { influence_trotskyism > 0.04 } } reset_ trotskyism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_maoism > 0.04 } } reset_ maoism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_monarchism > 0.04 } } reset_ monarchism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_islamism > 0.04 } } reset_islamism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_radical_shiaism > 0.04 } } reset_radical_shiaism_influence_ideas = yes }
    if = { limit = { check_variable = { influence_Salafism > 0.04 } } reset_Salafism_influence_ideas = yes }
}


# Scripted Influence Actions
spread_influence = {
	PREV = { add_political_power = -80 }

	set_temp_variable = { percent_change = 2 }
	set_temp_variable = { tag_index = PREV.id }
	set_temp_variable = { influence_target = THIS.id }
	change_influence_percentage = yes

}

make_puppet_action = {
	#eventually remove explotation idea (shouldn't double up)
	for_loop_effect = {
		end = influence_array^num
		value = v

		meta_effect = {
			text = {
				remove_ideas = [THISTAG]_tribute_idea
			}
			THISTAG = "[?var:influence_array^v.GetTag]"
		}
	}

	PREV = {
		set_autonomy = {
			target = PREV
			autonomy_state = autonomy_satellite_state
			freedom_level = 0.5
		}
		add_named_threat = { threat = 2 name = created_puppet_loc }
	}
	every_neighbor_country = {
		add_opinion_modifier = { target = PREV modifier = puppeted_neighbor }
	}
}

economic_exploitation_action = {
	meta_effect = {
		text = {
			add_ideas = [ROOTTAG]_tribute_idea
		}
		ROOTTAG = "[?var:influence_array^0.GetTag]"
	}

	# Remove 10% Influence
	set_temp_variable = { percent_change = -10 }
	set_temp_variable = { tag_index = PREV.id }
	set_temp_variable = { influence_target = THIS.id }
	change_influence_percentage = yes


	#Opinion Modifiers
	add_opinion_modifier = { target = PREV modifier = exploited_us }
	every_neighbor_country = {
		add_opinion_modifier = { target = PREV modifier = exploited_neighbor }
	}
}


manipulate_politics_action = {
	#Add +5 to our outlook
	if = { limit = { PREV = { has_government = fascism } }
		add_popularity = { ideology = fascism popularity = 0.05 }
	}
	else_if = { limit = { PREV = { has_government = neutrality } }
		add_popularity = { ideology = neutrality popularity = 0.05 }
	}
	else_if = { limit = { PREV = { has_government = communism } }
		add_popularity = { ideology = communism popularity = 0.05 }
	}
	else_if = { limit = { PREV = { has_government = nationalist } }
		add_popularity = { ideology = nationalist popularity = 0.05 }
	}
	else_if = { limit = { PREV = { has_government = democratic } }
		add_popularity = { ideology = democratic popularity = 0.05 }
	}

	#add +5 to our party
	for_each_loop = {
		array = PREV.ruling_party
		value = v
		add_to_variable = { party_pop_array^v = 0.05 }
	}

	# Remove 10% Influence
	set_temp_variable = { percent_change = -10 }
	set_temp_variable = { tag_index = PREV.id }
	set_temp_variable = { influence_target = THIS.id }
	change_influence_percentage = yes

	#reduce relations if different gov
	if = { limit = { NOT = { is_same_government_PREV = yes } }
		add_opinion_modifier = { target = PREV modifier = supported_opposition }
	}
}

delete_influencer_check = {
	if = {
		limit = {
			check_variable = { influence_array_val^0 < 0.01 }
			check_variable = { influence_array^0 > 0 } #Index 1 - Biggest Influencer
		}
		remove_from_array = { array = influence_array index = 0 }
		remove_from_array = { array = influence_array_val index = 0 }
	}
	if = {
		limit = {
			check_variable = { influence_array_val^1 < 0.01 }
			check_variable = { influence_array^1 > 0 } #Index 2 - Second Largest Influencer
		}
		remove_from_array = { array = influence_array index = 1 }
		remove_from_array = { array = influence_array_val index = 1 }
	}
	if = {
		limit = {
			check_variable = { influence_array_val^2 < 0.01 }
			check_variable = { influence_array^2 > 0 } #Index 3 - Third Largest Influencer
		}
		remove_from_array = { array = influence_array index = 2 }
		remove_from_array = { array = influence_array_val index = 2 }
	}
	if = {
		limit = {
			check_variable = { influence_array_val^3 < 0.01 }
			check_variable = { influence_array^3 > 0 } #Index 4 - Fourth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 3 }
		remove_from_array = { array = influence_array_val index = 3 }
	}
	if = {
		limit = {
			check_variable = { influence_array_val^4 < 0.01 }
			check_variable = { influence_array^4 > 0 } #Index 5 - Fifth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 4 }
		remove_from_array = { array = influence_array_val index = 4 }
	}
	if = {
		limit = {
			check_variable = { influence_array_val^5 < 0.01 }
			check_variable = { influence_array^5 > 0 } #Index 6 - Sixth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 5 }
		remove_from_array = { array = influence_array_val index = 5 }
	}
	if = {
		limit = {
			check_variable = { influence_array_val^6 < 0.01 }
			check_variable = { influence_array^6 > 0 } #Index 6 - Sixth Largest Influencer
		}
		remove_from_array = { array = influence_array index = 6 }
		remove_from_array = { array = influence_array_val index = 6 }
	}

	for_each_loop = {
		array = influence_array
		value = v
		index = i

		if = { limit = { check_variable = { i = 0 } }
			if = { limit = { check_variable = { influence_array^i = influence_array^6 } }
				add_to_variable = { influence_array_val^i = influence_array_val^6 }
				remove_from_array = { array = influence_array index = 6 }
				remove_from_array = { array = influence_array_val index = 6 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^5 } }
				add_to_variable = { influence_array_val^i = influence_array_val^5 }
				remove_from_array = { array = influence_array index = 5 }
				remove_from_array = { array = influence_array_val index = 5 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^4 } }
				add_to_variable = { influence_array_val^i = influence_array_val^4 }
				remove_from_array = { array = influence_array index = 4 }
				remove_from_array = { array = influence_array_val index = 4 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^3 } }
				add_to_variable = { influence_array_val^i = influence_array_val^3 }
				remove_from_array = { array = influence_array index = 3 }
				remove_from_array = { array = influence_array_val index = 3 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^2 } }
				add_to_variable = { influence_array_val^i = influence_array_val^2 }
				remove_from_array = { array = influence_array index = 2 }
				remove_from_array = { array = influence_array_val index = 2 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^1 } }
				add_to_variable = { influence_array_val^i = influence_array_val^1 }
				remove_from_array = { array = influence_array index = 1 }
				remove_from_array = { array = influence_array_val index = 1 }
			}
		}
		else_if = { limit = { check_variable = { i = 1 } }
			if = { limit = { check_variable = { influence_array^i = influence_array^6 } }
				add_to_variable = { influence_array_val^i = influence_array_val^6 }
				remove_from_array = { array = influence_array index = 6 }
				remove_from_array = { array = influence_array_val index = 6 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^5 } }
				add_to_variable = { influence_array_val^i = influence_array_val^5 }
				remove_from_array = { array = influence_array index = 5 }
				remove_from_array = { array = influence_array_val index = 5 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^4 } }
				add_to_variable = { influence_array_val^i = influence_array_val^4 }
				remove_from_array = { array = influence_array index = 4 }
				remove_from_array = { array = influence_array_val index = 4 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^3 } }
				add_to_variable = { influence_array_val^i = influence_array_val^3 }
				remove_from_array = { array = influence_array index = 3 }
				remove_from_array = { array = influence_array_val index = 3 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^2 } }
				add_to_variable = { influence_array_val^i = influence_array_val^2 }
				remove_from_array = { array = influence_array index = 2 }
				remove_from_array = { array = influence_array_val index = 2 }
			}
		}
		else_if = { limit = { check_variable = { i = 2 } }
			if = { limit = { check_variable = { influence_array^i = influence_array^6 } }
				add_to_variable = { influence_array_val^i = influence_array_val^6 }
				remove_from_array = { array = influence_array index = 6 }
				remove_from_array = { array = influence_array_val index = 6 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^5 } }
				add_to_variable = { influence_array_val^i = influence_array_val^5 }
				remove_from_array = { array = influence_array index = 5 }
				remove_from_array = { array = influence_array_val index = 5 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^4 } }
				add_to_variable = { influence_array_val^i = influence_array_val^4 }
				remove_from_array = { array = influence_array index = 4 }
				remove_from_array = { array = influence_array_val index = 4 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^3 } }
				add_to_variable = { influence_array_val^i = influence_array_val^3 }
				remove_from_array = { array = influence_array index = 3 }
				remove_from_array = { array = influence_array_val index = 3 }
			}
		}
		else_if = { limit = { check_variable = { i = 3 } }
			if = { limit = { check_variable = { influence_array^i = influence_array^6 } }
				add_to_variable = { influence_array_val^i = influence_array_val^6 }
				remove_from_array = { array = influence_array index = 6 }
				remove_from_array = { array = influence_array_val index = 6 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^5 } }
				add_to_variable = { influence_array_val^i = influence_array_val^5 }
				remove_from_array = { array = influence_array index = 5 }
				remove_from_array = { array = influence_array_val index = 5 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^4 } }
				add_to_variable = { influence_array_val^i = influence_array_val^4 }
				remove_from_array = { array = influence_array index = 4 }
				remove_from_array = { array = influence_array_val index = 4 }
			}
		}
		else_if = { limit = { check_variable = { i = 4 } }
			if = { limit = { check_variable = { influence_array^i = influence_array^6 } }
				add_to_variable = { influence_array_val^i = influence_array_val^6 }
				remove_from_array = { array = influence_array index = 6 }
				remove_from_array = { array = influence_array_val index = 6 }
			}
			if = { limit = { check_variable = { influence_array^i = influence_array^5 } }
				add_to_variable = { influence_array_val^i = influence_array_val^5 }
				remove_from_array = { array = influence_array index = 5 }
				remove_from_array = { array = influence_array_val index = 5 }
			}
		}
		else_if = { limit = { check_variable = { i = 5 } }
			if = { limit = { check_variable = { influence_array^i = influence_array^6 } }
				add_to_variable = { influence_array_val^i = influence_array_val^6 }
				remove_from_array = { array = influence_array index = 6 }
				remove_from_array = { array = influence_array_val index = 6 }
			}
		}
	}

	# Checks if the nation
	for_loop_effect = {
		end = influence_array^num
		value = v
		set_temp_variable = { temp_tag = 0 }
		add_to_temp_variable = { temp_tag = influence_array^v }
		if = {
			limit = {
				NOT = { country_exists = temp_var:temp_tag }
			}
			remove_from_array = {
				array = influence_array
				index = v
			}
			remove_from_array = {
				array = influence_array_val
				index = v
			}
		}
	}
}

# Boost Influence Effects
# Boost Domestic Influence:
# The Boost Domestic Influence is a macro function
# set_temp_variable = { percent_change = +-x }
change_domestic_influence_percentage = {
	# Creates the summation of all array calculations
	set_temp_variable = { influence_outlook_amount = 0 }
	for_each_loop = {
		array = influence_array_val
		value = v
		index = i
		add_to_temp_variable = { influence_outlook_amount = v }
	}

	add_to_variable = { domestic_influence_amount = percent_change }
	set_temp_variable = { temp_total = 100 }
	subtract_from_temp_variable = { temp_total = domestic_influence_amount }

	divide_temp_variable = { temp_total = influence_outlook_amount }
	for_each_loop = {
		array = influence_array_val
		value = v
		index = i

		multiply_variable = { influence_array_val^i = temp_total }
	}
	recalculate_influence = yes

	custom_effect_tooltip = change_domestic_influence_percentage_tt
}

# Change Influencer Effect:
# USAGE:
# This is from the perspective of the influencer nation
# Usually used in scripted content
# set_temp_variable = { percent_change = +-x }
# set_temp_variable = { influencer_index = 0-6 }
change_current_influencer_index_percentage = {
	set_temp_variable = { influence_outlook_amount = 0 }
	add_to_temp_variable = { influence_outlook_amount = domestic_influence_amount }

	for_each_loop = {
		array = influence_array_val
		value = v
		index = i

		add_to_temp_variable = { influence_outlook_amount = v }
	}
	clamp_variable = { var = influence_outlook_amount max = 100 min = 0 }
	subtract_from_temp_variable = { influence_outlook_amount = influence_array_val^influencer_index }

	add_to_variable = { influence_array_val^influencer_index = percent_change }
	set_temp_variable = { temp_total = 100 }
	subtract_from_temp_variable = { temp_total = influence_array_val^influencer_index }

	divide_temp_variable = { temp_total = influence_outlook_amount }
	multiply_variable = { domestic_influence_amount = temp_total }
	for_each_loop = {
		array = influence_array_val
		value = v
		index = i

		if = { limit = { NOT = { check_variable = { i = 0 } } }
			multiply_variable = { influence_array_val^i = temp_total }
		}
	}
	recalculate_influence = yes

	custom_effect_tooltip = change_influencer_tt
}

# USAGE:
# This is to scope from different versions. Attempt to see if it works.
# set_temp_variable = { percent_change = -+ x }
# set_temp_variable = { tag_index = SCOPE }
# set_temp_variable = { influence_target = SCOPE }
# Supported Scope: FROM, ROOT, PREV, TAG
change_influence_percentage = {
	var:influence_target = {
		for_loop_effect = {
			end = influence_array^num
			value = v
			if = {
				limit = {
					check_variable = { influence_array^v = var:tag_index }
				}
				set_temp_variable = { influencer_index = v }
				set_country_flag = found
			}
		}
		if = { limit = { NOT = { has_country_flag = found } }
			add_to_array = { influence_array = var:tag_index }
			add_to_array = { influence_array_val = 0 }

			for_loop_effect = {
				end = influence_array^num
				value = v
				if = {
					limit = {
						check_variable = { influence_array^v = var:tag_index }
					}
					set_temp_variable = { influencer_index = v }
				}
			}
		}

		var:tag_index = {
			set_temp_variable = { influence_change = influence_multiplier }
		}

		multiply_temp_variable = { percent_change = influence_change }

		if = {
			limit = {
				check_variable = { influence_array_val^6 > 0 }
				NOT = { check_variable = { influence_array^6 = var:tag_index } }
			}
			if = {
				limit = { check_variable = { percent_change > influence_array_val^6 } }
				set_variable = { influence_array^6 = var:tag_index }
				set_variable = { influence_array_val^6 = percent_change }
				set_temp_variable = { influencer_index = 6 }

				set_temp_variable = { influence_outlook_amount = 0 }
				add_to_temp_variable = { influence_outlook_amount = domestic_influence_amount }

				for_each_loop = {
					array = influence_array_val
					value = v
					index = i

					add_to_temp_variable = { influence_outlook_amount = v }
				}
				subtract_from_temp_variable = { influence_outlook_amount = influence_array_val^influencer_index }

				add_to_variable = { influence_array_val^influencer_index = percent_change }
				set_temp_variable = { temp_total = 100 }
				subtract_from_temp_variable = { temp_total = influence_array_val^influencer_index }

				divide_temp_variable = { temp_total = influence_outlook_amount }
				multiply_variable = { domestic_influence_amount = temp_total }
				for_each_loop = {
					array = influence_array_val
					value = v
					index = i

					if = { limit = { NOT = { check_variable = { i = 0 } } }
						multiply_variable = { influence_array_val^i = temp_total }
					}
				}
				recalculate_influence = yes

				custom_effect_tooltip = change_influencer_tt
			}
			else = {
				# Creates the summation of all array calculations
				set_temp_variable = { influence_outlook_amount = 0 }
				for_each_loop = {
					array = influence_array_val
					value = v
					index = i
					add_to_temp_variable = { influence_outlook_amount = v }
				}

				add_to_variable = { domestic_influence_amount = percent_change }
				set_temp_variable = { temp_total = 100 }
				subtract_from_temp_variable = { temp_total = domestic_influence_amount }

				divide_temp_variable = { temp_total = influence_outlook_amount }
				for_each_loop = {
					array = influence_array_val
					value = v
					index = i

					multiply_variable = { influence_array_val^i = temp_total }
				}
				recalculate_influence = yes

				custom_effect_tooltip = change_domestic_influence_percentage_tt
			}
		}
		else = {
			for_loop_effect = {
				end = influence_array^num
				value = v
				if = {
					limit = {
						check_variable = { influence_array^v = var:tag_index }
					}
					set_temp_variable = { influencer_index = v }
					set_country_flag = found
				}
			}
			if = {
				limit = { NOT = { has_country_flag = found } }
				add_to_array = { influence_array = var:tag_index }
				add_to_array = { influence_array_val = 0 }

				for_loop_effect = {
					end = influence_array^num
					value = v
					if = {
						limit = {
							check_variable = { influence_array^v = var:tag_index }
						}
						set_temp_variable = { influencer_index = v }
					}
				}
			}
			clr_country_flag = found

			set_temp_variable = { influence_outlook_amount = 0 }
			add_to_temp_variable = { influence_outlook_amount = domestic_influence_amount }

			for_each_loop = {
				array = influence_array_val
				value = v
				index = i

				add_to_temp_variable = { influence_outlook_amount = v }
			}
			subtract_from_temp_variable = { influence_outlook_amount = influence_array_val^influencer_index }

			add_to_variable = { influence_array_val^influencer_index = percent_change }
			set_temp_variable = { temp_total = 100 }
			subtract_from_temp_variable = { temp_total = influence_array_val^influencer_index }

			divide_temp_variable = { temp_total = influence_outlook_amount }
			multiply_variable = { domestic_influence_amount = temp_total }
			for_each_loop = {
				array = influence_array_val
				value = v
				index = i

				if = { limit = { NOT = { check_variable = { i = 0 } } }
					multiply_variable = { influence_array_val^i = temp_total }
				}
			}
			recalculate_influence = yes
		}
	}
}