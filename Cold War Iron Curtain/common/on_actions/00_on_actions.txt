on_actions = {
	# country 
	on_new_term_election = {
		random_events = {
			100 = usa.1002
			100 = usa.19603
			100 = usa.19563
			100 = usa.19643
			100 = usa.19683
			100 = usa.19723
			100 = usa.19763
			100 = usa.19803
			100 = usa.19843
			100 = usa.19883
			100 = usa.19923
			100 = usa.19963
			100 = usa.20003
			100 = usa.20043
			100 = usa.20083
			100 = usa.20123
			100 = usa.20163
		}
		random_events = {
			100 = Canada_Elections.1
			100 = Canada_Elections.2
			100 = Canada_Elections.3
			100 = Canada_Elections.4
		}
		random_events = {
			100 = cw_saf.20
			100 = cw_saf.1
		}
		random_events = {
			100 = India_Elections.1
			100 = India_Elections.2
			100 = India_Elections.3
			100 = India_Elections.4
			100 = India_Elections.5
			100 = India_Elections.6
		}
		random_events = {
			100 = election.1
		}
		random_events = {
			100 = mex.1
			100 = mex.2
		}
		random_events = {
			100 = wgr.2500
			100 = wgr.200
			100 = wgr.201
			100 = wgr.202
			100 = wgr.204
			100 = wgr.205
			100 = wgr.206
			100 = wgr.207
			100 = wgr.208
			100 = wgr.209
			100 = wgr.210
			100 = wgr.211
		}
		random_events = {
			100 = ita.200
			100 = ita.250
			100 = ita.201
		}
		random_events = {
			100 = por.1
			100 = por.2
		}
		random_events = {
			100 = fin.200
			100 = fin.201
			100 = fin.202
			100 = fin.203
			100 = fin.204
			100 = fin.205
			100 = fin.206
		}
		random_events = {
			100 = japan_elections.1
			100 = japan_elections.2
			100 = japan_elections.3
			100 = japan_elections.4	
		}
		random_events = {
			100 = KOR_Elections.1963
			100 = KOR_Elections.1967
			100 = KOR_Elections.1971
		}
		random_events = {
			100 = cw_saf.1
			100 = cw_saf.20
			100 = saf_elections.1
			100 = saf_elections.2
			100 = saf_elections.3
		}
		#random_events = {
		#	100 = SWE_Elections.1
		#	100 = SWE_Elections.2
		#	100 = SWE_Elections.3
		#	100 = SWE_Elections.4
		#	100 = SWE_Elections.5
		#	100 = SWE_Elections.6
		#	100 = SWE_Elections.7
		#	100 = SWE_Elections.8
		#	100 = SWE_Elections.9
		#	100 = SWE_Elections.10
		#}
		random_events = {
			100 = rho.1
			100 = rho.104
			100 = rho.126
			100 = rho.127
			100 = rho.128
		}
		random_events = {
			100 = nic.1
		}
		random_events = {
			100 = cuba.25
		}
		random_events = {
			100 = iree.1
		}
		random_events = {
			100 = swi_elections.1
			100 = swi_elections.2
			100 = swi_elections.3
			100 = swi_elections.4
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			#100 = ace_promoted.1
			#5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			#100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			#100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			#100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			#100 = ace_died.1
		}
	}

	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		random_events = {
			1000 = NATO.1
		}
		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}

	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}

	# country random events
	on_bi_yearly_pulse = {
		effect = {
		}
	}

	#on_five_year_pulse = {
	#
	#}

	on_border_war_lost = {
		# effect = {
		# 	owner = {
		# 		country_event = goa.14 
		# 		country_event = goa.16
		# 	}
		# }	
	}
	
	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
			if = {
				limit = {
					FROM = {
						has_idea = nato_member
					}
				}
				remove_ideas = nato_member
			}
		}
	}

	#FROM is the one that joins the faction
	on_create_faction = {
		effect = {
		}
	}

	#FROM is country getting invited.
	on_offer_join_faction = {
		effect = {
	
		}
	}

	#FROM is faction leader on join faction requests.
	on_join_faction = {
		effect = {
			if = {
				limit = {
					FROM = {
						has_idea = nato_member
					}
				}
				add_ideas = nato_member
			}
		}
	}

	# ROOT is attacker, FROM is defender
	on_declare_war = {
		effect = {
			if = {
				limit = {
					OR = {
						AND = {
							ROOT = { tag = SOV }
							FROM = { tag = PRC }
						}
						AND = {
							ROOT = { tag = PRC }
							FROM = { tag = SOV }
						}
					}
				}
				Sino_Soviet_War = yes
			}
			hidden_effect = {
				# Remove Influence modifiers if any
				FROM = { country_event = influence.10 }
			}
			# Check for attack on NATO Member
			if = {
				limit = {
					OR = {
						# Attacked a NATO member
						FROM = { has_idea = nato_member }
						# Attacked a puppet of a NATO member
						FROM = {
							is_subject = yes
							OVERLORD = { has_idea = nato_member }
							has_civil_war = no # check if this is a NATO puppet's civil war
						}
					}
				}
				custom_effect_tooltip = TT_CALL_NATO
				if = { limit = { NOT = { has_global_flag = NATO_called_to_arms } }
					FROM = { country_event = NATO.2 }
				}
				set_country_flag = Attacked_NATO
				# if a NATO member attacks another NATO member, kick him from NATO
				if = {
					limit = {
						has_idea = nato_member
						OR = {
							FROM = { has_idea = nato_member }
							FROM = {
								is_subject = yes
								OVERLORD = { has_idea = nato_member }
							}
						}
					}
					custom_effect_tooltip = TT_CALL_NATO
					FROM = { country_event = NATO.20 }
					remove_ideas = nato_member
				}
			}
		}
	}

	# ROOT is attacker, FROM is defender
	on_war_relation_added = {
		effect = {
			# WIP Harain
			# Remove Influence modifiers if any
			# FROM = { country_event = influence.10 }
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = news.159
		}
	}
	
	# ROOT is capitulated country, FROM is winner
	on_capitulation = {
		# moved to 11_usa_on_actions.txt - add new ones there
	}

	# ROOT is previously capitulated country
	on_uncapitulation = {
		effect = {
		}
	}

	on_government_change = {
		effect = {			
			#Make sure Soviet can always create factions
			if = {
				limit = {
					original_tag = SOV
					NOT = { has_government = communism }
				}
				set_rule = { can_create_factions = yes }
			}
			if = {
				limit = { has_government = democratic }
				if = {
					limit = { has_idea = democratic_opposition_voicing_protests }
					remove_ideas = democratic_opposition_voicing_protests
				}
				if = {
					limit = { has_idea = democratic_revolutionaries }
					remove_ideas = democratic_revolutionaries
				}
				if = {
					limit = { has_idea = reign_of_terror }
					remove_ideas = reign_of_terror
				}
			}
			if = {
				limit = { has_government = communism }
				if = {
					limit = { TAG = SAF }
					set_cosmetic_tag = SAF_COM
				}
				if = {
					limit = { has_idea = communist_partisans_recruiting }
					remove_ideas = communist_partisans_recruiting
				}
				if = {
					limit = { has_idea = communist_revolutionaries }
					remove_ideas = communist_revolutionaries
				}
				if = {
					limit = { has_idea = communism_defeated }
					remove_ideas = communism_defeated
				}

				#Remove anti_soviet_pact
				if = {
					limit = { has_idea = anti_soviet_pact }
					remove_ideas = anti_soviet_pact
				}
			}
			if = {
				limit = { has_government = fascism }
				if = {
					limit = { has_idea = fascist_assault_divisions }
					remove_ideas = fascist_assault_divisions
				}
				if = {
					limit = { has_idea = fascist_revolutionaries }
					remove_ideas = fascist_revolutionaries
				}
				if = {
					limit = { has_idea = fascism_defeated }
					remove_ideas = fascism_defeated
				}
				if = {
					limit = { has_idea = anti_nazi_coup }
					remove_ideas = anti_nazi_coup
				}
				if = {
					limit = { tag = WGR }
					set_cosmetic_tag = WGR_fascist
				}
				if = {
					limit = { tag = DDR }
					set_cosmetic_tag = DDR_fascist
				}
			}
			#Replace the following two with events for SOV if they are not communist.
			#if = {
			#	limit = { 
			#		OR = {
			#			has_idea = trotskyite_plot 
			#			has_idea = trotskyite_plot_purged
			#		}
			#		NOT = {
			#			has_civil_war = yes
			#		}
			#	}
			#	country_event = { id = soviet.54 }
			#}
		}
	}

	on_coup_succeeded = {
		effect = {
			#Turn elections on for democracies created from coup
			random_other_country = {
				limit = {
					has_government = democratic
					original_tag = ROOT
				}
				set_politics = {
					ruling_party = democratic
					elections_allowed = yes
				}
			}
		}
	}

	#ROOT is winner #FROM gets annexed - This will also fire on_annex
	on_civil_war_end = {
		effect = {
		}
	}

	#Not run on a specific country.
	on_startup = {
		effect = {
		    every_country = {
			    if = { limit = { has_tech = jet_interceptor1 } add_ideas = interceptor_cost_1_idea }
				if = { limit = { has_tech = jet_interceptor2 } add_ideas = interceptor_cost_2_idea }
			    if = { limit = { has_tech = jet_interceptor3 } add_ideas = interceptor_cost_3_idea }
				if = { limit = { has_tech = jet_interceptor4 } add_ideas = interceptor_cost_4_idea }	
                if = { limit = { has_tech = jet_multirole1 } add_ideas = multirole_cost_1_idea }
				if = { limit = { has_tech = jet_multirole2 } add_ideas = multirole_cost_2_idea }
				if = { limit = { has_tech = jet_multirole3 } add_ideas = multirole_cost_3_idea }
				if = { limit = { has_tech = jet_multirole4 } add_ideas = multirole_cost_4_idea }
				if = { limit = { has_tech = cv_jet_multirole1 } add_ideas = cvmultirole_cost_1_idea }
				if = { limit = { has_tech = cv_jet_multirole2 } add_ideas = cvmultirole_cost_2_idea }
				if = { limit = { has_tech = cv_jet_multirole3 } add_ideas = cvmultirole_cost_3_idea }
				if = { limit = { has_tech = cv_jet_multirole4 } add_ideas = cvmultirole_cost_4_idea }
				if = { limit = { has_tech = jet_CAS1 } add_ideas = casjet_cost_1_idea }
				if = { limit = { has_tech = jet_CAS2 } add_ideas = casjet_cost_2_idea }
				if = { limit = { has_tech = jet_CAS3 } add_ideas = casjet_cost_3_idea }
				if = { limit = { has_tech = jet_CAS4 } add_ideas = casjet_cost_4_idea }
				if = { limit = { has_tech = cv_jet_CAS1 } add_ideas = cvcasjet_cost_1_idea }
				if = { limit = { has_tech = cv_jet_CAS2 } add_ideas = cvcasjet_cost_2_idea }
				if = { limit = { has_tech = cv_jet_CAS3 } add_ideas = cvcasjet_cost_3_idea }
				if = { limit = { has_tech = cv_jet_CAS4 } add_ideas = cvcasjet_cost_4_idea }
				if = { limit = { has_tech = transport1 } add_ideas = transportplane_cost_1_idea }
				if = { limit = { has_tech = transport2 } add_ideas = transportplane_cost_2_idea }
				if = { limit = { has_tech = transport3 } add_ideas = transportplane_cost_3_idea }
				if = { limit = { has_tech = transport4 } add_ideas = transportplane_cost_4_idea }
				if = { limit = { has_tech = naval_bomber1 } add_ideas = navalbomber_cost_1_idea }
				if = { limit = { has_tech = naval_bomber2 } add_ideas = navalbomber_cost_2_idea }
				if = { limit = { has_tech = naval_bomber3 } add_ideas = navalbomber_cost_3_idea }
				if = { limit = { has_tech = naval_bomber4 } add_ideas = navalbomber_cost_4_idea }
				if = { limit = { has_tech = jet_tactical_bomber1 } add_ideas = jettacbomber_cost_1_idea }
				if = { limit = { has_tech = jet_tactical_bomber2 } add_ideas = jettacbomber_cost_2_idea }
				if = { limit = { has_tech = jet_tactical_bomber3 } add_ideas = jettacbomber_cost_3_idea }
				if = { limit = { has_tech = jet_tactical_bomber4 } add_ideas = jettacbomber_cost_4_idea }
				if = { limit = { has_tech = jet_strategic_bomber1 } add_ideas = jetstratbomber_cost_1_idea }
				if = { limit = { has_tech = jet_strategic_bomber2 } add_ideas = jetstratbomber_cost_2_idea }
				if = { limit = { has_tech = jet_strategic_bomber3 } add_ideas = jetstratbomber_cost_3_idea }
				if = { limit = { has_tech = jet_strategic_bomber4 } add_ideas = jetstratbomber_cost_4_idea }
            }
			SOV = {set_variable = { current_country_state_decision = 91.id } }
			SAF = {
				set_variable = { total_pop_k_prior = 0 }
				every_owned_state = { add_to_variable = { SAF.total_pop_k_prior = state_population_k } }
				set_variable = { quarterly_white_immigration_k = 15 }
				set_variable = { quarterly_white_immigration = 15000 } 
				set_variable = { saf_white_growth = 0.13 }
				set_variable = { saf_colored_growth = 0.12 } 
				set_variable = { saf_asian_growth = 0.04 } 
				set_variable = { saf_bantu_growth = 0.71 }

				set_variable = { white_percentage = 0.21 }
				set_variable = { colored_percentage = 0.09 }
				set_variable = { asian_percentage = 0.03 }
				set_variable = { bantu_percentage = 0.67 }

				set_variable = { white_population = 0.21 }
				set_variable = { colored_population = 0.09 }   
				set_variable = { asian_population = 0.03 }    
				set_variable = { bantu_population = 0.67 } 

				set_variable = { white_population_prior = total_pop_k_prior }
				set_variable = { colored_population_prior = total_pop_k_prior }
				set_variable = { asian_population_prior = total_pop_k_prior }
				set_variable = { bantu_population_prior = total_pop_k_prior }

				multiply_variable = { white_population_prior = white_percentage }
				round_variable = white_population_prior

				multiply_variable = { colored_population_prior = colored_percentage }
				round_variable = colored_population_prior

				multiply_variable = { asian_population_prior = asian_percentage }
				round_variable = asian_population_prior

				multiply_variable = { bantu_population_prior = bantu_percentage }
				round_variable = bantu_population_prior
				create_pie_chart_south_africa = yes				
			}
			#Flag Building History Initialization#
			#This runs a cleanup in the history files to make modding states easier. All previous coms from seperate startdates are added and to prevent errors and duplicate flags this script cleans up all inferior flags
			every_state = {
				state_on_startup_initialization = yes
				
				if = {
					limit = {
						date < 1950.1.1
					}
					initialize_1949_setup = yes
				}
				else_if = {
					limit = {
						date < 1961.1.1
						date > 1959.1.1
					}
					initialize_1960_setup = yes
				}
				else_if = {
					limit = {
						date < 1974.1.1
						date > 1972.1.1
					}
					initialize_1973_setup = yes
				}
				else_if = {
					limit = {
						date < 1981.1.1
						date > 1979.1.1
					}
					initialize_1980_setup = yes
				}
				else_if = {
					limit = {
						date < 1992.1.1
						date > 1990.1.1
					}
					initialize_1991_setup = yes
				}
				else_if = {
					limit = {
						date < 2001.1.1
						date > 1999.1.1
					}
					initialize_2000_setup = yes
				}
			}
			every_country = {
				set_variable = { policy_legislation = 1 }
				add_to_array = {
					country_politics_list = 1	#Normal Policies
				}
				add_to_array = {
					country_politics_list = 2	#Social Policies
				}
				add_to_array = {
					country_politics_list = 3	#Fiscal Overview
				}
				#add_to_array = {
				#	country_politics_list = 4	#Detailed Income Info
				#}
				#add_to_array = {
				#	country_politics_list = 5	#Detailed Expense Info
				#}
				#add_to_array = {
				#	country_politics_list = 6	#Demographic Info
				#}
				if = {
					limit = {
						tag = USA
					}
					add_to_array = {
						country_politics_list = 50	#US CONGRESS
					}
				}
				if = {
					limit = {
						has_country_flag = arab_league_member
					}
					add_to_array = {
						country_politics_list = 25	#ARAB LEAGUE
					}
				}
				every_owned_state = {
					add_to_array = {
						PREV.acceptedculturelist = culture^0
					}
					add_to_array = {
						PREV.acceptedculturelist = culture^1
					}
					add_to_array = {
						PREV.acceptedculturelist = culture^2
					}
					add_to_array = {
						PREV.acceptedculturelist = culture^3
					}
				}
				if = {
					limit = {
						NOT = {
							#Christian#
							has_country_flag = PR_ChristianityCatholic 
							has_country_flag = PR_ChristianityProtestant 
							has_country_flag = PR_ChristianityOrthodox 
							has_country_flag = PR_ChristianityOriental 
							#Judaic#
							has_country_flag = PR_Judaism 
							#Islamic#
							has_country_flag = PR_IslamSunni 
							has_country_flag = PR_IslamShia 
							has_country_flag = PR_IslamIbadi 
							#Buddhism#
							has_country_flag = PR_BuddhismVajrayana 
							has_country_flag = PR_BuddhismMahayana 
							has_country_flag = PR_BuddhismThereveda 
							#Eastern#
							has_country_flag = PR_Shinto 
							has_country_flag = PR_TraditionalEastern 
							has_country_flag = PR_Confucian 
							#Indo-Iranian#
							has_country_flag = PR_Hindu 
							has_country_flag = PR_Sikh 
							has_country_flag = PR_Navayana 
							has_country_flag = PR_TraditionalIranian 
							#Irreligious#
							has_country_flag = PR_Irreligious 
							has_country_flag = PR_Atheist 
							#Minor/Esoteric#
							has_country_flag = PR_ZionistChristian 
							has_country_flag = PR_Statist 
							has_country_flag = PR_CultistSafe 
							has_country_flag = PR_CultistFatal
							has_country_flag = PR_TraditionalAfrican
							has_country_flag = PR_TraditionalAmerican
							has_country_flag = PR_TraditionalOceanic
							has_country_flag = PR_Nautralist
							has_country_flag = PR_Messianic 
							has_country_flag = PR_Other 
						}
					}
					major_religion_placeholder = yes
				}
			}
			
######################################################################
#####################CWIC DEFINES, DO NOT TOUCH#######################
			#defines version
			set_variable = { ICDefinesVersion = 37 }
			#Use [?global.varname] in loc to display them
			#Use global.varname in scripts to use them
			#Bulk is 10x the base
			#Large is 3x base
			#Upgrade cost categories = global.UPC_(category)
			#Upgrade cost telecoms = global.UPTC_(statesize(mini#mi-sma#/nominal#nom-med#/largo#lar+#))(com0-3)_(pop(small#1-2#/medium#3-5#/large#7-15#),overpopulated)
			#MercDuration is the length of the mercenary contract payments
	
			##Influence Defines##
			set_variable = { Exploit_Limit = 0.74}

			#STELLAR AI# 
			#AI RATIOS FOR ECONOMICS AND BUILDING#
			set_variable = { ai_power_ratio = 0.25 } #Ratio of power plants to office park/industrial park/dockyard/military factory
			set_variable = { ai_office_ratio = 0.25 } #Ratio of office parks to industrial parks
			set_variable = { ai_agri_investment = 0.25 } #Percentage of industry to invest in agri-industrial complexes until positive
			set_variable = { ai_water_point = 25 } #Number of factories minimum to start investing 15 industrial parks regularly to building water infra
			set_variable = { ai_renewable_point = 45 } #Number of factories minimum to start diverting to renewable and nuclear power
			set_variable = { ai_renewable_ratio = 0.3 } #Ratio of renewable to fossil when the renewable point is reached
			set_variable = { ai_nuclear_ratio = 0.05 } #Ratio of nuclear to fossil when the renewable point is reached
			
			#DIVIDERS
			set_variable = { GlobalCredit = 0.45 } #Income from Production/Trade/Commerce
			set_variable = { GlobalTaxCredit = 1.00 } #Income from Taxes
			set_variable = { GlobalDebit = 0.28 } #Policy Expenses
			set_variable = { GlobalEdictDebit = 0.44 } #Edict/Program/Project Expenses
			
			set_variable = { PreindustrialTaxCredit = 0.5 }
			set_variable = { IndustrialTaxCredit = 1 }
			set_variable = { DevelopedTaxCredit = 1.25 }
			set_variable = { ModernTaxCredit = 1.5 }
			set_variable = { AutomatedTaxCredit = 1.75 }
			
			#ECOLOGICAL
			set_variable = { eco_health = 0.95 } #Starting planet/ecosystem hitpoints
			#{ eco_output_factor } Multiplicative #{ eco_output_rate } Additive Effect
			
			#Agency-related Variables#
			set_variable = { upgrades_per_operative = 10 }
			
			###WEAPON PURCHASE PRICES###
			#Guns, support equipment, towed support weapons
			set_variable = { WPTierOne = 10 }
			#Trucks, light sp support weapons, medium support weapons
			set_variable = { WPTierTwo = 20 }
			#IFVs, Heavy Support Weapons, Medium SP Weapons
			set_variable = { WPTierThree = 40 }
			#Jets, Tanks
			set_variable = { WPTierFour = 80 }
			#Bombers
			set_variable = { WPTierFive = 120 }
			#Frigates (x4), Destroyers (x2) Single-Small Submarines (x2)
			set_variable = { WPTierSix = 250 }
			#Cruisers, Light Carriers
			set_variable = { WPTierSeven = 350 }
			
			set_variable = { LargePer = 5 } #Large Purchase Price
			set_variable = { BulkPer = 20 } #Bulk Purchase Price
			
			set_variable = { SmallCooldown = 1 } #Years cooldown on 1x purchases
			set_variable = { LargeCooldown = 3 } #Years backorder on large purchases
			set_variable = { BulkCooldown = 5 } #Years backorder on bulk purchases
			set_variable = { SmallNavalCooldown = 3 } #Years backorder on small naval ships
			set_variable = { NominalNavalCooldown = 4 } #Years backorder on medium naval ships
			set_variable = { LargeNavalCooldown = 6 } #Years backorder on large naval ships
			
			#QUANTITIES#
			#Civ Market
			set_variable = { SupportPer = 100 }
			set_variable = { MotorPer = 100 }
			set_variable = { UtilityHeliPer = 100 }
			set_variable = { CargoHeliPer = 24 }
			set_variable = { LightJetPer = 20 }
			set_variable = { TransportPer = 10 }
			set_variable = { ConvoyPer = 10 }
			#By Contract
			set_variable = { InfantryPer = 100 }
			set_variable = { InfantryBulkPer = 150 } #Bulk Sale highly outdated weapons
			set_variable = { InfantryPiratePer = 200 } #Exceptionally Poor Quality Black Market Weapons
			set_variable = { DFGPer = 36 }
			set_variable = { ATGMPer = 36 }
			set_variable = { AAPer = 36 }
			set_variable = { SAMPer = 24 }
			set_variable = { LtArtyPer = 48 }
			set_variable = { ArtyPer = 36 }
			set_variable = { HtArtyPer = 24 }
			set_variable = { LtPer = 50 }
			set_variable = { MCVPer = 50 }
			set_variable = { MBTPer = 40 }
			set_variable = { APCPer = 50 }
			set_variable = { IFVPer = 40 }
			set_variable = { ScoutHeliPer = 12 }
			set_variable = { MultirolePer = 20 }
			set_variable = { MultiroleBulkPer = 30 } #Non-Jet
			set_variable = { CVMultirolePer = 10 }
			set_variable = { CVMultiroleBulkPer = 15 } #Non-Jet
			
			###MERCENARY VARIABLES###
			#HIRE COST IS DETERMINED BY SALARY + MANPOWER COST + EQUIPMENT COST#
			#COSTS#  #global.Merc[Grade]ManpowerPrice is the final cost per manpower. It is multiplied by the base cost
			set_variable = { MercMilitia = 25 } #SALARIES
			set_variable = { MercLight = 50 } #SALARIES
			set_variable = { MercMobile = 100 } #SALARIES
			set_variable = { MercPro = 300 } #SALARIES
			set_variable = { MercManpowerPrice = 0.01 } #Base cost of 1000 manpower to replenish or hire, multiplied by merc contract price
			
			set_variable = { MercYears = 0.5 } #INTERVAL/FREQUENCY OF PAYMENTS 
			#global.MercDuration# is the exported variable
			
			#GLOBAL MANPOWER#
			set_variable = { MercMilitiaManpower = 20000 } #Manpower per Company
			set_variable = { MercLightManpower = 10000 } #Manpower per Company
			set_variable = { MercMobileManpower = 10000 } #Manpower per Company
			set_variable = { MercProManpower = 5000 } #Manpower per Company
			set_variable = { MercManpowerReplenish = 0.02 } #Percent manpower to replenish per month
			#EQUIPMENT AVAILABLE#
			#1 merc equipment = 10 cost ic
			set_variable = { MercEquipmentPrice = 50 } #Price Per 100 Merc Equipment Piece Replenish
			set_variable = { MercEquipmentPer = 50 } #Maximum Merc Equipment Purchasable per Military Factory in ZA WUARDO
			set_variable = { MercEquipmentReplenish = 0.03 } #Percent Equipment in contract pool to Replenish per Month
			
			###RGO PURCHASE PRICES AND RESOURCE GAINS###
			#Rare Earths, Nuclear Materiel
			set_variable = { RGOResourceRareMicro = 3 }
			set_variable = { RGOResourceRareSmall = 6 }
			set_variable = { RGOResourceRareMedium = 8 }
			set_variable = { RGOResourceRareLarge = 12 }
			#Light Metals, Construction Metals, Food
			set_variable = { RGOResourceCommonMicro = 8 }
			set_variable = { RGOResourceCommonSmall = 12 }
			set_variable = { RGOResourceCommonMedium = 16 }
			set_variable = { RGOResourceCommonLarge = 24 }
			#Petrochemicals
			set_variable = { RGOResourcePetrolMicro = 8 }
			set_variable = { RGOResourcePetrolSmall = 12 }
			set_variable = { RGOResourcePetrolMedium = 18 }
			set_variable = { RGOResourcePetrolLarge = 24 }
			set_variable = { RGOResourcePetrolMega = 50 }
			
			##RGO Costs##
			set_variable = { RGOTierOne = 120 } #Small
			set_variable = { RGOTierTwo = 240 } #Standard
			set_variable = { RGOTierThree = 360 } #Expensive
			set_variable = { RGOTierFour = 480 } #Highly Expensive
			set_variable = { RGOTierFive = 600 } #Ultra Expensive
			set_variable = { RGOTierSix = 3000 } #Extreme Fever Dream Projects
			
			set_variable = { RGOElectricity = 360 } #General Electricity Project cost
			set_variable = { RGOFusion = 7000 } #Tokamak Fusion Reactor cost
			
			set_variable = { RGOConstructionLength = 365 } #Days to build 1 RGO
			
			##Tourist Infrastructure Costs#
			set_variable = { TIHistoricalSiteSmallCost = 60 }
			set_variable = { TIHistoricalSiteLargeCost = 240 }
			set_variable = { TIHistoricalSiteReligiousCost = 120 }
			
			set_variable = { TIResortSmallCost = 120 }
			set_variable = { TIResortNominalCost = 240 }
			set_variable = { TIResortLargeCost = 360 }
			
			set_variable = { TINaturalSiteNominalCost = 60 }
			set_variable = { TINaturalSiteLargeCost = 120 }
			
			set_variable = { TIUltraCost = 4000 } #Extreme Fever Dream Projects
			
			#Tourist Infrastructure Values (How much tourist infrastructure each building is worth, determines income, NOT SITE IMPORTANCE OR NUMBER OF TOURISTS)#
			set_variable = { TIHistoricalSiteSmall = 0.25 } #Value of Minor historical site or museum
			set_variable = { TIHistoricalSiteLarge = 0.5 } #Value of Major historical site or historical society
			set_variable = { TIHistoricalSiteReligious = 2 } #Value of Religious historical site
			
			set_variable = { TIResortSmall = 0.25 } #Value of a small resort OR small resort improvement
			set_variable = { TIResortNominal = 0.5 } #Value of a nominal resort OR nominal resort improvement
			set_variable = { TIResortLarge = 0.75 } #Value of a large resort OR large resort improvement
			
			set_variable = { TINaturalSiteNominal = 0.25 } #Value of national park
			set_variable = { TINaturalSiteLarge = 1 } #Value of natural wonder
			
			set_variable = { TIHistoricalUltra = 6 } #Value of fever dream project
			set_variable = { TIResortUltra = 6 } #Value of fever dream project
			set_variable = { TINaturalUltra = 6 } #Value of fever dream project
			
			##STATE CATEGORY COSTS##
			set_variable = { dev0per = 90 }
			set_variable = { dev1per = 48 }
			set_variable = { dev2per = 75 }
			set_variable = { dev3per = 120 }
			set_variable = { dev4per = 200 }
			##Percent category upgrade progress per month##
			set_variable = { upgrade_per_month_fast = 2 } #0-2mil population
			set_variable = { upgrade_per_month_nominal = 1.5 } #3-7mil population
			set_variable = { upgrade_per_month_slow = 1 } #10-19mil population
			set_variable = { upgrade_per_month_marathon = 0.5 } #20+mil population
			
			##TELECOMS COSTS##
			set_variable = { coms1per = 12 } #Installing Digital Switches [1940] #Radio, WW2 Computers
			set_variable = { coms2per = 24 } #Installing Cellular [1960] #Coms II, Consumer Electronics II
			set_variable = { coms3per = 24 } #Installing Fiber Optic [1980] #Coms IV, Interwebs III
			set_variable = { coms4per = 36 } #Installing 4G LTE [2000] #Coms VI, Interwebs VII
			set_variable = { coms5per = 36 } #Installing 5G [2020] #Coms VII, Interwebs XI
			##GRID COSTS##
			set_variable = { grid1per = 12 } #Installing Synchronized Power Grid [1950] #Grid I
			set_variable = { grid2per = 24 } #Installing Modernized Electrical Grid [1970] #Grid III
			set_variable = { grid3per = 24 } #Installing Resiliant Power Grid [1990] #Grid V
			set_variable = { grid4per = 36 } #Installing Smart Grids [2010] #Grid VII
			
			##FLAG SIZE AND POPULATION COST MULTIPLIERS##
			set_variable = { flag_mini_mult = 2 } #micro/small
			set_variable = { flag_nominal_mult = 5 } #nominal/medium
			set_variable = { flag_largo_mult = 13 } #large/massive/gigantic
			
			set_variable = { flag_popsmall_mult = 2 } #Pop1/2
			set_variable = { flag_popmedium_mult = 5 } #Pop3/4/5
			set_variable = { flag_poplargo_mult = 10 } #Pop7/10/15
			set_variable = { flag_overpopulated_mult = 20 } #Pop20+
			
			set_variable = { flag_upgrade_progress_per_month = 10 } #Percent coms upgrade progress per month
			
			##RELIGION##
			set_variable = { AtheistDrift = 0.0002 } #Population Converting to Atheism in Atheist State Per Month
			set_variable = { TheocracyDrift = 0.0005 } #Population Converting to Primary Religion in Theocracy Per Month
			set_variable = { State_ReligionDrift = 0.0003 } #Population Converting to Primary Religion in Countries with State Religion Per Month
			set_variable = { MoralistDrift = 0.0002 } #Population Converting to Primary Religion in Moralist Countries Per Month
			
			set_variable = { MissionStrength = 0.002 } #Population Converted by Missionaries/Missions
			
			set_variable = { MissionCost = 1 } #Money Cost Per Mil Population Per Month to run a mission 

########################DEFINES CALCULATIONS##########################
			set_variable = { eco_output_factor = 1 }
			set_variable = { ecoalpha = eco_health }
			multiply_variable = { ecoalpha = 10 }
			add_to_variable = { eco_output_factor = ecoalpha }
			divide_variable = { eco_output_factor = 11 } #Average between 1 and eco_health x 11. 0 eco_health = 0.09 output factor
			
			set_variable = { eco_output_rate = 0 } #Global temporary effects. Additive with farm_tech and offset by it.
			
			set_variable = { WPTierOneLarge = WPTierOne }
			multiply_variable = { WPTierOneLarge = LargePer }
			set_variable = { WPTierOneBulk = WPTierOne }
			multiply_variable = { WPTierOneBulk = BulkPer }
			
			set_variable = { WPTierTwoLarge = WPTierTwo }
			multiply_variable = { WPTierTwoLarge = LargePer }
			set_variable = { WPTierTwoBulk = WPTierTwo }
			multiply_variable = { WPTierTwoBulk = BulkPer }
			
			set_variable = { WPTierThreeLarge = WPTierThree }
			multiply_variable = { WPTierThreeLarge = LargePer }
			set_variable = { WPTierThreeBulk = WPTierThree }
			multiply_variable = { WPTierThreeBulk = BulkPer }
			
			set_variable = { WPTierFourLarge = WPTierFour }
			multiply_variable = { WPTierFourLarge = LargePer }
			set_variable = { WPTierFourBulk = WPTierFour }
			multiply_variable = { WPTierFourBulk = BulkPer }
			
			set_variable = { WPTierFiveLarge = WPTierFive }
			multiply_variable = { WPTierFiveLarge = LargePer }
			set_variable = { WPTierFiveBulk = WPTierFive }
			multiply_variable = { WPTierFiveBulk = BulkPer }
			
			set_variable = { WPTierSixLarge = WPTierSix }
			multiply_variable = { WPTierSixLarge = LargePer }
			set_variable = { WPTierSixBulk = WPTierSix }
			multiply_variable = { WPTierSixBulk = BulkPer }
			
			set_variable = { WPTierSevenLarge = WPTierSeven }
			multiply_variable = { WPTierSevenLarge = LargePer }
			set_variable = { WPTierSevenBulk = WPTierSeven }
			multiply_variable = { WPTierSevenBulk = BulkPer }
			
			set_variable = { SmallCooldownYears = SmallCooldown }
			set_variable = { LargeCooldownYears = LargeCooldown }
			set_variable = { BulkCooldownYears = BulkCooldown }
			set_variable = { SmallNavalCooldownYears = SmallNavalCooldown }
			set_variable = { NominalNavalCooldownYears = NominalNavalCooldown }
			set_variable = { LargeNavalCooldownYears = LargeNavalCooldown }
			
			multiply_variable = { SmallCooldown = 365 }
			multiply_variable = { LargeCooldown = 365 }
			multiply_variable = { BulkCooldown = 365 }
			multiply_variable = { SmallNavalCooldownYears = 365 }
			multiply_variable = { NominalNavalCooldownYears = 365 }
			multiply_variable = { LargeNavalCooldownYears = 365 }
			
			set_variable = { SupportPerLarge = SupportPer }
			set_variable = { MotorPerLarge = MotorPer }
			set_variable = { UtilityHeliPerLarge = UtilityHeliPer }
			set_variable = { CargoHeliPerLarge = CargoHeliPer }
			set_variable = { LightJetPerLarge = LightJetPer }
			set_variable = { TransportPerLarge = TransportPer }
			set_variable = { ConvoyPerLarge = ConvoyPer }
			set_variable = { InfantryPerLarge = InfantryPer }
			set_variable = { InfantryBulkPerLarge = InfantryBulkPer }
			set_variable = { InfantryPiratePerLarge = InfantryPiratePer }
			set_variable = { DFGPerLarge = DFGPer }
			set_variable = { ATGMPerLarge = ATGMPer }
			set_variable = { AAPerLarge = AAPer }
			set_variable = { SAMPerLarge = SAMPer }
			set_variable = { LtArtyPerLarge = LtArtyPer }
			set_variable = { ArtyPerLarge = ArtyPer }
			set_variable = { HtArtyPerLarge = HtArtyPer }
			set_variable = { LtPerLarge = LtPer }
			set_variable = { MCVPerLarge = MCVPer }
			set_variable = { MBTPerLarge = MBTPer }
			set_variable = { APCPerLarge = APCPer }
			set_variable = { IFVPerLarge = IFVPer }
			set_variable = { ScoutHeliPerLarge = ScoutHeliPer }
			set_variable = { MultirolePerLarge = MultirolePer }
			set_variable = { MultiroleBulkPerLarge = MultiroleBulkPer }
			set_variable = { CVMultirolePerLarge = CVMultirolePer }
			set_variable = { CVMultiroleBulkPerLarge = CVMultiroleBulkPer }
			multiply_variable = { SupportPerLarge = LargePer }
			multiply_variable = { MotorPerLarge = LargePer }
			multiply_variable = { UtilityHeliPerLarge = LargePer }
			multiply_variable = { CargoHeliPerLarge = LargePer }
			multiply_variable = { LightJetPerLarge = LargePer }
			multiply_variable = { TransportPerLarge = LargePer }
			multiply_variable = { ConvoyPerLarge = LargePer }
			multiply_variable = { InfantryPerLarge = LargePer }
			multiply_variable = { InfantryBulkPerLarge = LargePer }
			multiply_variable = { InfantryPiratePerLarge = LargePer }
			multiply_variable = { DFGPerLarge = LargePer }
			multiply_variable = { ATGMPerLarge = LargePer }
			multiply_variable = { AAPerLarge = LargePer }
			multiply_variable = { SAMPerLarge = LargePer }
			multiply_variable = { LtArtyPerLarge = LargePer }
			multiply_variable = { ArtyPerLarge = LargePer }
			multiply_variable = { HtArtyPerLarge = LargePer }
			multiply_variable = { LtPerLarge = LargePer }
			multiply_variable = { MCVPerLarge = LargePer }
			multiply_variable = { MBTPerLarge = LargePer }
			multiply_variable = { APCPerLarge = LargePer }
			multiply_variable = { IFVPerLarge = LargePer }
			multiply_variable = { ScoutHeliPerLarge = LargePer }
			multiply_variable = { MultirolePerLarge = LargePer }
			multiply_variable = { MultiroleBulkPerLarge = LargePer }
			multiply_variable = { CVMultirolePerLarge = LargePer }
			multiply_variable = { CVMultiroleBulkPerLarge = LargePer }
			
			set_variable = { SupportPerBulk = SupportPer }
			set_variable = { MotorPerBulk = MotorPer }
			set_variable = { UtilityHeliPerBulk = UtilityHeliPer }
			set_variable = { CargoHeliPerBulk = CargoHeliPer }
			set_variable = { LightJetPerBulk = LightJetPer }
			set_variable = { TransportPerBulk = TransportPer }
			set_variable = { ConvoyPerBulk = ConvoyPer }
			set_variable = { InfantryPerBulk = InfantryPer }
			set_variable = { InfantryBulkPerBulk = InfantryBulkPer }
			set_variable = { InfantryPiratePerBulk = InfantryPiratePer }
			set_variable = { DFGPerBulk = DFGPer }
			set_variable = { ATGMPerBulk = ATGMPer }
			set_variable = { AAPerBulk = AAPer }
			set_variable = { SAMPerBulk = SAMPer }
			set_variable = { LtArtyPerBulk = LtArtyPer }
			set_variable = { ArtyPerBulk = ArtyPer }
			set_variable = { HtArtyPerBulk = HtArtyPer }
			set_variable = { LtPerBulk = LtPer }
			set_variable = { MCVPerBulk = MCVPer }
			set_variable = { MBTPerBulk = MBTPer }
			set_variable = { APCPerBulk = APCPer }
			set_variable = { IFVPerBulk = IFVPer }
			set_variable = { ScoutHeliPerBulk = ScoutHeliPer }
			set_variable = { MultirolePerBulk = MultirolePer }
			set_variable = { MultiroleBulkPerBulk = MultiroleBulkPer }
			set_variable = { CVMultirolePerBulk = CVMultirolePer }
			set_variable = { CVMultiroleBulkPerBulk = CVMultiroleBulkPer }
			multiply_variable = { SupportPerBulk = BulkPer }
			multiply_variable = { MotorPerBulk = BulkPer }
			multiply_variable = { UtilityHeliPerBulk = BulkPer }
			multiply_variable = { CargoHeliPerBulk = BulkPer }
			multiply_variable = { LightJetPerBulk = BulkPer }
			multiply_variable = { TransportPerBulk = BulkPer }
			multiply_variable = { ConvoyPerBulk = BulkPer }
			multiply_variable = { InfantryPerBulk = BulkPer }
			multiply_variable = { InfantryBulkPerBulk = BulkPer }
			multiply_variable = { InfantryPiratePerBulk = BulkPer }
			multiply_variable = { DFGPerBulk = BulkPer }
			multiply_variable = { ATGMPerBulk = BulkPer }
			multiply_variable = { AAPerBulk = BulkPer }
			multiply_variable = { SAMPerBulk = BulkPer }
			multiply_variable = { LtArtyPerBulk = BulkPer }
			multiply_variable = { ArtyPerBulk = BulkPer }
			multiply_variable = { HtArtyPerBulk = BulkPer }
			multiply_variable = { LtPerBulk = BulkPer }
			multiply_variable = { MCVPerBulk = BulkPer }
			multiply_variable = { MBTPerBulk = BulkPer }
			multiply_variable = { APCPerBulk = BulkPer }
			multiply_variable = { IFVPerBulk = BulkPer }
			multiply_variable = { ScoutHeliPerBulk = BulkPer }
			multiply_variable = { MultirolePerBulk = BulkPer }
			multiply_variable = { MultiroleBulkPerBulk = BulkPer }
			multiply_variable = { CVMultirolePerBulk = BulkPer }
			multiply_variable = { CVMultiroleBulkPerBulk = BulkPer }
			
			set_variable = { UPC_pop1 = dev0per }
			set_variable = { UPC_pop2 = dev0per }
			set_variable = { UPC_pop3 = dev0per }
			set_variable = { UPC_pop4 = dev0per }
			set_variable = { UPC_pop5 = dev0per }
			set_variable = { UPC_pop7 = dev0per }
			set_variable = { UPC_pop10 = dev0per }
			set_variable = { UPC_pop15 = dev0per }
			set_variable = { UPC_pop20 = dev0per }
			multiply_variable = { UPC_pop1 = 1 }
			multiply_variable = { UPC_pop2 = 2 }
			multiply_variable = { UPC_pop3 = 3 }
			multiply_variable = { UPC_pop4 = 4 }
			multiply_variable = { UPC_pop5 = 5 }
			multiply_variable = { UPC_pop7 = 7 }
			multiply_variable = { UPC_pop10 = 10 }
			multiply_variable = { UPC_pop15 = 15 }
			multiply_variable = { UPC_pop20 = 20 }
			
			set_variable = { UPC_pop1dev1 = dev1per }
			set_variable = { UPC_pop2dev1 = dev1per }
			set_variable = { UPC_pop3dev1 = dev1per }
			set_variable = { UPC_pop4dev1 = dev1per }
			set_variable = { UPC_pop5dev1 = dev1per }
			set_variable = { UPC_pop7dev1 = dev1per }
			set_variable = { UPC_pop10dev1 = dev1per }
			set_variable = { UPC_pop15dev1 = dev1per }
			set_variable = { UPC_pop20dev1 = dev1per }
			multiply_variable = { UPC_pop1dev1 = 1 }
			multiply_variable = { UPC_pop2dev1 = 2 }
			multiply_variable = { UPC_pop3dev1 = 3 }
			multiply_variable = { UPC_pop4dev1 = 4 }
			multiply_variable = { UPC_pop5dev1 = 5 }
			multiply_variable = { UPC_pop7dev1 = 7 }
			multiply_variable = { UPC_pop10dev1 = 10 }
			multiply_variable = { UPC_pop15dev1 = 15 }
			multiply_variable = { UPC_pop20dev1 = 20 }
			
			set_variable = { UPC_pop1dev2 = dev2per }
			set_variable = { UPC_pop2dev2 = dev2per }
			set_variable = { UPC_pop3dev2 = dev2per }
			set_variable = { UPC_pop4dev2 = dev2per }
			set_variable = { UPC_pop5dev2 = dev2per }
			set_variable = { UPC_pop7dev2 = dev2per }
			set_variable = { UPC_pop10dev2 = dev2per }
			set_variable = { UPC_pop15dev2 = dev2per }
			set_variable = { UPC_pop20dev2 = dev2per }
			multiply_variable = { UPC_pop1dev2 = 1 }
			multiply_variable = { UPC_pop2dev2 = 2 }
			multiply_variable = { UPC_pop3dev2 = 3 }
			multiply_variable = { UPC_pop4dev2 = 4 }
			multiply_variable = { UPC_pop5dev2 = 5 }
			multiply_variable = { UPC_pop7dev2 = 7 }
			multiply_variable = { UPC_pop10dev2 = 10 }
			multiply_variable = { UPC_pop15dev2 = 15 }
			multiply_variable = { UPC_pop20dev2 = 20 }
			
			set_variable = { UPC_pop1dev3 = dev3per }
			set_variable = { UPC_pop2dev3 = dev3per }
			set_variable = { UPC_pop3dev3 = dev3per }
			set_variable = { UPC_pop4dev3 = dev3per }
			set_variable = { UPC_pop5dev3 = dev3per }
			set_variable = { UPC_pop7dev3 = dev3per }
			set_variable = { UPC_pop10dev3 = dev3per }
			set_variable = { UPC_pop15dev3 = dev3per }
			set_variable = { UPC_pop20dev3 = dev3per }
			multiply_variable = { UPC_pop1dev3 = 1 }
			multiply_variable = { UPC_pop2dev3 = 2 }
			multiply_variable = { UPC_pop3dev3 = 3 }
			multiply_variable = { UPC_pop4dev3 = 4 }
			multiply_variable = { UPC_pop5dev3 = 5 }
			multiply_variable = { UPC_pop7dev3 = 7 }
			multiply_variable = { UPC_pop10dev3 = 10 }
			multiply_variable = { UPC_pop15dev3 = 15 }
			multiply_variable = { UPC_pop20dev3 = 20 }
			
			set_variable = { UPC_pop1dev4 = dev4per }
			set_variable = { UPC_pop2dev4 = dev4per }
			set_variable = { UPC_pop3dev4 = dev4per }
			set_variable = { UPC_pop4dev4 = dev4per }
			set_variable = { UPC_pop5dev4 = dev4per }
			set_variable = { UPC_pop7dev4 = dev4per }
			set_variable = { UPC_pop10dev4 = dev4per }
			set_variable = { UPC_pop15dev4 = dev4per }
			set_variable = { UPC_pop20dev4 = dev4per }
			multiply_variable = { UPC_pop1dev4 = 1 }
			multiply_variable = { UPC_pop2dev4 = 2 }
			multiply_variable = { UPC_pop3dev4 = 3 }
			multiply_variable = { UPC_pop4dev4 = 4 }
			multiply_variable = { UPC_pop5dev4 = 5 }
			multiply_variable = { UPC_pop7dev4 = 7 }
			multiply_variable = { UPC_pop10dev4 = 10 }
			multiply_variable = { UPC_pop15dev4 = 15 }
			multiply_variable = { UPC_pop20dev4 = 20 }
			
			#No Building Slot Room Cost Reduction#
			#Reduce cost to upgrade because you gain no extra, or reduced, building slots at these levels
			multiply_variable = { UPC_pop20 = 0.75 }
			
			multiply_variable = { UPC_pop15dev1 = 0.9 }
			multiply_variable = { UPC_pop20dev1 = 0.75 }
			
			multiply_variable = { UPC_pop15dev2 = 0.75 }
			multiply_variable = { UPC_pop20dev2 = 0.6 }
			
			multiply_variable = { UPC_pop10dev3 = 0.9 }
			multiply_variable = { UPC_pop15dev3 = 0.75 }
			multiply_variable = { UPC_pop20dev3 = 0.6 }
			
			
			set_variable = { MercDuration = MercYears }
			multiply_variable = { MercDuration = 365 }
			
			set_variable = { MercMilitiaManpowerPrice = MercMilitia }
			set_variable = { MercLightManpowerPrice = MercLight }
			set_variable = { MercMobileManpowerPrice = MercMobile }
			set_variable = { MercProManpowerPrice = MercPro }
			multiply_variable = { MercMilitiaManpowerPrice = MercManpowerPrice }
			multiply_variable = { MercLightManpowerPrice = MercManpowerPrice }
			multiply_variable = { MercMobileManpowerPrice = MercManpowerPrice }
			multiply_variable = { MercProManpowerPrice = MercManpowerPrice }
########################END OF CALCULATIONS##########################

			UNS = {
				add_to_array = { UNS.un_option_list = 0 }
				add_to_array = { UNS.un_option_list = 1 }
				add_to_array = { UNS.un_option_list = 2 }
				add_to_array = { UNS.un_option_list = 3 }
				add_to_array = { UNS.un_option_list = 4 }
				add_to_array = { UNS.un_option_list = 5 }
				add_to_array = { UNS.un_option_list = 6 }
				add_to_array = { UNS.un_option_list = 7 }
				add_to_array = { UNS.un_option_list = 8 }
				add_to_array = { UNS.un_option_list = 9 }
				add_to_array = { UNS.un_option_list = 10 }
				add_to_array = { UNS.un_option_list = 11 }
				add_to_array = { UNS.un_option_list = 12 }
				add_to_array = { UNS.un_option_list = 13 }
				add_to_array = { UNS.un_option_list = 14 }
				add_to_array = { UNS.un_option_list = 15 }
				add_to_array = { UNS.un_option_list = 16 }

				add_to_array = { UNS.un_option_list = 17 }	#Application to Join
			}

			UNS = {
				add_to_array = { UNS.arab_league_option_list = 0 }
				add_to_array = { UNS.arab_league_option_list = 1 }
				add_to_array = { UNS.arab_league_option_list = 2 }
				add_to_array = { UNS.arab_league_option_list = 3 }
				add_to_array = { UNS.arab_league_option_list = 4 }
				add_to_array = { UNS.arab_league_option_list = 5 }
				add_to_array = { UNS.arab_league_option_list = 6 }
				add_to_array = { UNS.arab_league_option_list = 7 }
				add_to_array = { UNS.arab_league_option_list = 8 }
				add_to_array = { UNS.arab_league_option_list = 9 }
				add_to_array = { UNS.arab_league_option_list = 10 }
				add_to_array = { UNS.arab_league_option_list = 11 }
				add_to_array = { UNS.arab_league_option_list = 12 }
				add_to_array = { UNS.arab_league_option_list = 13 }
				add_to_array = { UNS.arab_league_option_list = 14 }
				add_to_array = { UNS.arab_league_option_list = 15 }
				add_to_array = { UNS.arab_league_option_list = 16 }
				add_to_array = { UNS.arab_league_option_list = 17 }
				add_to_array = { UNS.arab_league_option_list = 18 }
				add_to_array = { UNS.arab_league_option_list = 19 }
				add_to_array = { UNS.arab_league_option_list = 20 }
				add_to_array = { UNS.arab_league_option_list = 21 }
				add_to_array = { UNS.arab_league_option_list = 22 }
				add_to_array = { UNS.arab_league_option_list = 23 }
				add_to_array = { UNS.arab_league_option_list = 24 }
				add_to_array = { UNS.arab_league_option_list = 25 }
				add_to_array = { UNS.arab_league_option_list = 26 }
				add_to_array = { UNS.arab_league_option_list = 27 }
				add_to_array = { UNS.arab_league_option_list = 28 }
				

				add_to_array = { UNS.arab_league_influence_option_list = 0 }
				add_to_array = { UNS.arab_league_influence_option_list = 1 }
				add_to_array = { UNS.arab_league_influence_option_list = 2 }
				add_to_array = { UNS.arab_league_influence_option_list = 3 }
				add_to_array = { UNS.arab_league_influence_option_list = 4 }
				add_to_array = { UNS.arab_league_influence_option_list = 5 }
				add_to_array = { UNS.arab_league_influence_option_list = 6 }
				add_to_array = { UNS.arab_league_influence_option_list = 7 }
				add_to_array = { UNS.arab_league_influence_option_list = 8 }
				add_to_array = { UNS.arab_league_influence_option_list = 9 }
				add_to_array = { UNS.arab_league_influence_option_list = 10 }
				add_to_array = { UNS.arab_league_influence_option_list = 11 }
				add_to_array = { UNS.arab_league_influence_option_list = 12 }
				add_to_array = { UNS.arab_league_influence_option_list = 13 }
				

				add_to_array = { UNS.arab_league_relations_list = 0 }
				add_to_array = { UNS.arab_league_relations_list = 1 }
				add_to_array = { UNS.arab_league_relations_list = 2 }
				add_to_array = { UNS.arab_league_relations_list = 3 }
				add_to_array = { UNS.arab_league_relations_list = 4 }
				add_to_array = { UNS.arab_league_relations_list = 5 }
				add_to_array = { UNS.arab_league_relations_list = 6 }

				add_to_array = { UNS.arab_league_relations_list = 7 }
				add_to_array = { UNS.arab_league_relations_list = 8 }
				add_to_array = { UNS.arab_league_relations_list = 9 }
				add_to_array = { UNS.arab_league_relations_list = 10 }
				add_to_array = { UNS.arab_league_relations_list = 11 }
				add_to_array = { UNS.arab_league_relations_list = 12 }
				add_to_array = { UNS.arab_league_relations_list = 13 }
				add_to_array = { UNS.arab_league_relations_list = 14 }
				
			}

			MOR = {
				MOR_percentage_update_calc = yes
			}
			ARG = { add_ideas = un_member }
			AST = { add_ideas = un_member }
			BEL = { add_ideas = un_member }
			BOL = { add_ideas = un_member }
			BRA = { add_ideas = un_member }
			CAN = { add_ideas = un_member }
			CHL = { add_ideas = un_member }
			COL = { add_ideas = un_member }
			COS = { add_ideas = un_member }
			CUB = { add_ideas = un_member }
			CZE = { add_ideas = un_member }
			DEN = { add_ideas = un_member }
			DOM = { add_ideas = un_member }
			ECU = { add_ideas = un_member }
			EGY = { add_ideas = un_member } 
			ELS = { add_ideas = un_member }
			ETH = { add_ideas = un_member }
			GRE = { add_ideas = un_member }
			GUA = { add_ideas = un_member }
			HAI = { add_ideas = un_member }
			HON = { add_ideas = un_member }
			RAJ = { add_ideas = un_member }
			PER = { add_ideas = un_member }
			IRQ = { add_ideas = un_member }
			LEB = { add_ideas = un_member }
			LIB = { add_ideas = un_member }
			LUX = { add_ideas = un_member }
			MEX = { add_ideas = un_member }
			HOL = { add_ideas = un_member }
			NZL = { add_ideas = un_member }
			NIC = { add_ideas = un_member }
			NOR = { add_ideas = un_member }
			PAN = { add_ideas = un_member }
			PAR = { add_ideas = un_member }
			PRU = { add_ideas = un_member }
			PHI = { add_ideas = un_member }
			POL = { add_ideas = un_member }
			SAU = { add_ideas = un_member }
			SYR = { add_ideas = un_member }
			TUR = { add_ideas = un_member }
			SAF = { add_ideas = un_member }
			URG = { add_ideas = un_member }
			VEN = { add_ideas = un_member }
			YUG = { add_ideas = un_member }
			AFG = { add_ideas = un_member }
			ICE = { add_ideas = un_member }
			SIA = { add_ideas = un_member }
			SWE = { add_ideas = un_member }
			PAK = { add_ideas = un_member }
			YEM = { add_ideas = un_member }
			#BEM = { add_ideas = un_member }
	
			#####ARMS SALES TECH STARTING LEVELS#####
			set_global_flag = WP_CAP_tech_2
			set_global_flag = WP_CAP_tech_1
			
			set_global_flag = WP_CUM_tech_2
			set_global_flag = WP_CUM_tech_1
			
			set_global_flag = WP_MAO_tech_1
			
			set_global_flag = WP_IND_tech_1
					
			#### SPACE RACE ####
			clear_array = global.space_race_array_country
			clear_array = global.space_race_array_num_decisions
			clear_array = global.top_space_race_array_country
			clear_array = global.top_space_race_array_num_decisions

			###ECONOMICS###
			every_country = {
				set_variable = { num_space_race_decisions = 0}
				ic_pulse = yes
				startup_influence = yes
				add_to_variable = { decryptTotal = 1 }
				add_to_variable = { encryptTotal = 1 }
				set_country_flag = bonds.25
			}
########################END OF CWIC DEFINES###########################
######################################################################
			YUG = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					country_event = CRO_insurgency_options.0
				}
			}			
			CHI = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					activate_mission = The_Shanghai_Campaign
				}
			}	
			

			ISR = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					country_event = israel.10
					country_event = { id = israel.9999 days = 1 }
				}
			}
			every_country = {
				army_experience = 50
				navy_experience = 50
			}
			random_country = {
				add_to_array = { global.sd_array = 1 }
				add_to_array = { global.sd_array = 2 }
				add_to_array = { global.sd_array = 3 }
			}

			#every_country = {
			#	if = {
			#		limit = {
			#			is_ai = yes
			#			NOT = { has_template = "Infantry Division" }
			#		}
			#		load_oob = "_ai_templates"
			#	}
			#}
			AFG = {
				army_experience = 250
				navy_experience = 250
			}
			VTC = {
				army_experience = 666666
				navy_experience = 666666
				air_experience = 666666
				country_event = TUTOR.666
			}
			HOK = {
				army_experience = 250
				navy_experience = 250
			}
			ISR = {
                for_loop_effect = {
                    end = acceptedculturelist^num
                    value = v
                    if = {
                        limit = {
							check_variable = { acceptedculturelist^v = 205 }
                        }
                        set_variable = {
							acceptedculturelist^v = 0
						}
                    }
                }
			}
			USA = {
				army_experience = 100
				navy_experience = 100
                for_loop_effect = {
                    end = acceptedculturelist^num
                    value = v
                    if = {
                        limit = {
                            OR = {
								check_variable = { acceptedculturelist^v = 7 }
								check_variable = { acceptedculturelist^v = 8 }
								check_variable = { acceptedculturelist^v = 9 }
							}
                        }
                        set_variable = {
							acceptedculturelist^v = 0
						}
                    }
                }
			}
			SOV = {
				army_experience = 100
				navy_experience = 100
			}
			PRC = {
				army_experience = 50
			}
			RCG = {
				army_experience = 50
			}
			RAJ = {
				army_experience = 50
			}
			PAK = {
				army_experience = 50
			}
			KPA = {
				army_experience = 50
				navy_experience = 50
			}
			KOR = {
				army_experience = 50
				navy_experience = 50
			}
			ENG = {
				army_experience = 50
				navy_experience = 200
			}
			YUG = {
				army_experience = 50
			}
			ITA = {
				army_experience = 50
			}
			SPR = {
				army_experience = 50
			}
			XSM = {
				army_experience = 50
			}
			ISR = {
				army_experience = 50
			}

			USA = {
				country_event = focus_check.1
			}
			SOV = {
				country_event = sov.1001
			}
			#PHI = {
			#	country_event = hukbalahap.1001
			#}
			#SPR = {
			#	country_event = Maquis.1001
			#}
			SEN = {
				french_influence_col_idea_add = yes
			}
			MOR = {
				french_influence_col_idea_add = yes
			}
			RCG = {
				french_influence_col_idea_add = yes
			}
			DJI = {
				french_influence_col_idea_add = yes
			}
			TUN = {
				french_influence_col_idea_add = yes
			}
			SAR = {
				french_influence_col_idea_add = yes
			}
			AND = {
				french_influence_col_idea_add = yes
			}
			LOS = {
				french_influence_col_idea_add = yes
			}
			CAM = {
				french_influence_col_idea_add = yes
			}
			VIE = {
				french_influence_col_idea_add = yes
			}
			CMR = {
				french_influence_col_idea_add = yes
			}
			MAD = {
				french_influence_col_idea_add = yes
			}
			#every_country = {
			#	limit = {
			#		check_variable = { domestic_influence_amount > 0 }
			#	}
			#	recalculate_influence = yes
			#}
			VTC = {
				set_country_flag = ic_pulse_one_flag
			}	
			FRA = {
				set_division_template_lock = { division_template = "Légion Étrangère Française" is_locked = yes }	
			}
			FRA = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					country_event = { id = French_PM.1 days = 135 }
				}
			}
			BUL = {
				if = {
					limit = {
						date < 1950.1.1
					}
					country_event = { id = BUL.100 days = 40 }
				}
			}
			PAK = {
				779 = {
					add_dynamic_modifier = {
						modifier = autonomous_state
					}		
				}
			}
			
			random_other_country = {
				limit = { is_ai = no }
				close_all_windows = yes
				news_event = tutorial.1000
				country_event = { id = tutorial.2000 hours = 1 }
				#country_event = tutorial.1
			}
			every_country = {
				limit = {
					date < 1950.1.1
					OR = {
						is_subject_of = ENG
						is_puppet_of = ENG
					}
				}
				add_to_war = {
					targeted_alliance = MAL
					enemy = MLA
				}
			}

			every_country = {
				limit = {
					date < 1950.1.1
					OR = {
						is_subject_of = RAJ
						is_puppet_of = RAJ
					}
				}
				add_to_war = {
					targeted_alliance = MAL
					enemy = MLA
				}
			}
			COL = {
				country_event = COL_pol.1
			}
			every_country = {
				country_event = TUTOR.0
			}
		}
	}

	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			 
			if = {
				limit = {
					tag = ISR
					has_country_flag = suezcrisis 
					NOT = { has_country_flag = going_it_alone }
					453 = {
						is_controlled_by = ISR
						is_owned_by = EGY
					}
					ISR = { has_war_with = EGY }
				}
				country_event = operationkadesh.3 
				
			}

			if = {
				limit = {
					tag = ISR
					has_country_flag = suezcrisis 
					NOT = { has_country_flag = going_it_alone }
					801 = {
						is_controlled_by = ISR
						is_owned_by = EGY
					}
					ISR = { has_war_with = EGY }
				}
				country_event = operationkadesh.4
			}
			
			if = {
				limit = {
					tag = ISR
					has_country_flag = suezcrisis 
					NOT = { has_country_flag = going_it_alone }
					453 = {
						is_controlled_by = ISR
						is_owned_by = EGY
					}
					ISR = { has_war_with = EGY }
				}
				country_event = operationkadesh.5
			}

			if = {
				limit = {
					tag = ISR
					has_country_flag = suezcrisis 
					has_country_flag = going_it_alone 
					801 = {
						is_controlled_by = ISR
						is_owned_by = EGY
					}
					805 = {
						is_controlled_by = ISR
						is_owned_by = EGY
					}
					453 = {
						is_controlled_by = ISR
						is_owned_by = EGY
					}
					ISR = { has_war_with = EGY }
				}
				country_event = operationkadesh.6
			}
			
			if = {
				limit = {
					tag = EGY
					has_country_flag = suezcrisisegy
					1296 = {
						is_controlled_by = EGY
						is_owned_by = ISR
					}
					ISR = { has_war_with = EGY }
				}
				country_event = suez.30 
				
			}
			
			if = {
				limit = {
					tag = EGY
					has_country_flag = suezcrisisegy
					755 = {
						is_controlled_by = EGY
						is_owned_by = ISR
					}
					ISR = { has_war_with = EGY }
				}
				country_event = suez.30 
				
			}
			
			if = {
				limit = {
					tag = EGY
					has_country_flag = suezcrisisegy
					803 = {
						is_controlled_by = EGY
						is_owned_by = ISR
					}
					ISR = { has_war_with = EGY }
				}
				country_event = suez.30 
				
			}

			if = {
				limit = {
					tag = SOV
					NOT = { has_global_flag = conquest_helsinki_ussr }
					111 = { 
						is_controlled_by = SOV 
						is_owned_by = FIN 
					}
					SOV = { has_war_with = FIN }
				}
				news_event = conquest.1
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 78
					}
				}
				1235 = {
					add_core_of = SOV
				}
				78 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 949
					}
				}
				949 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 230
					}
				}
				230 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 231
					}
				}
				231 = {
					add_core_of = SOV
				}
				934 = {
					add_core_of = SOV
				}
				933 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 229
					}
				}
				229 = {
					add_core_of = SOV
				}
				799 = {
					add_core_of = SOV
				}
				935 = {
					add_core_of = SOV
				}
				798 = {
					add_core_of = SOV
				}
				419 = {
					add_core_of = SOV
				}
			}
		}
	}

	#FROM is the state nuked
	on_nuke_drop = {
		effect = {
			if = { limit = { NOT = { has_global_flag = wmd_first_nuke } } #First Nuke
				set_global_flag = wmd_first_nuke
				news_event = nuke_dropped.1
			}
			if = { limit = { FROM = { state = 529 } NOT = { has_global_flag = hiroshima_nuked } } news_event = nuke_dropped.2 } #Hiroshima
			else_if = { limit = { FROM = { state = 528 } NOT = { has_global_flag = nagasaki_nuked } } news_event = nuke_dropped.3 } #Nagasaki
			else_if = { limit = { FROM = { state = 742 } NOT = { has_global_flag = berlin_nuked } } news_event = nuke_dropped.4 } #West Berlin
			else_if = { limit = { FROM = { state = 744 } NOT = { has_global_flag = berlin_nuked } } news_event = nuke_dropped.4 } #East Berlin
			else_if = { limit = { FROM = { state = 126 } NOT = { has_global_flag = london_nuked } } news_event = nuke_dropped.5 } #London
			else_if = { limit = { FROM = { state = 531 } NOT = { has_global_flag = kyoto_nuked } } news_event = nuke_dropped.6 } #Kyoto
			else_if = { limit = { FROM = { state = 282 } NOT = { has_global_flag = tokyo_nuked } } news_event = nuke_dropped.7 } #Tokyo
			else_if = { limit = { FROM = { state = 1200 } NOT = { has_global_flag = washington_nuked } } news_event = nuke_dropped.8 } #Washington
			else_if = { limit = { FROM = { state = 2 } NOT = { has_global_flag = rome_nuked } } news_event = nuke_dropped.9 } #Rome
			else_if = { limit = { FROM = { state = 16 } NOT = { has_global_flag = paris_nuked } } news_event = nuke_dropped.10 } #Paris
			else_if = { limit = { FROM = { state = 219 } NOT = { has_global_flag = moscow_nuked } } news_event = nuke_dropped.11 } #Moscow
			else_if = { limit = { FROM = { state = 37 } NOT = { has_global_flag = copenhagen_nuked } } news_event = nuke_dropped.12 } #Copenhagen
			else_if = { limit = { FROM = { state = 141 } NOT = { has_global_flag = stockholm_nuked } } news_event = nuke_dropped.13 } #Stockholm
			wmd_damage_loop_effect = yes
		}

		random_events = {
			# 100 = nuke_dropped.0
			# 10000 = nuke_dropped.100
		}
	}

	#ROOT is winner, FROM gets annexed
	on_annex = {
		effect = {
			
			if = {
				limit = {
					tag = DDR
					FROM = {
						tag = WGR
					}
				}
				East_German_Reunification = yes
			}
			if = {
				limit = {
					tag = KPA
					FROM = {
						tag = KOR
					}
				}
				korean_war_north_victory_super_event = yes
			}
			if = {
				limit = {
					date < 1959.12.31
					FROM = { TAG = GRE }
					ROOT = { TAG = PDG }				
				}
				PDG = { set_capital = 47 }
			}
			# hidden_effect = {
			# 	# Remove Influence modifiers if any
			# 	FROM = { country_event = influence.11 }
			# }
		}
	}
}
