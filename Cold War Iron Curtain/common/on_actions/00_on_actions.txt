on_actions = {
	on_monthly = {
		effect = {
			if = {
				limit = {
					is_ai = no
				}
				GDP_Graph_Financial_Tab_Update = yes
				GDP_Debt_Graph_Financial_Tab_Update = yes
				Food_Graph_Financial_Tab_Update = yes
				Income_Graph_Financial_Tab_Update = yes
				Electricity_Graph_Financial_Tab_Update = yes
			}
			add_to_variable = {
				Current_Month = 1
			}
			add_to_variable = {
				month_counter = 1
			}
			if = {	#Reset to January after December
				limit = {
					check_variable = {
						Current_Month > 12
					}
				}
				set_variable = {
					Current_Month = 1
				}
				#GDP YOY
				set_variable = {
					yoy_change_gdp = grossdomesticproduct
				}
				subtract_from_variable = {
					yoy_change_gdp = last_year_gdp
				}
				set_variable = {
					last_year_gdp = grossdomesticproduct
				}
				#GDP-Debt YOY
				set_variable = {
					yoy_change_debt = GDP_Debt_Ratio
				}
				subtract_from_variable = {
					yoy_change_debt = last_year_debt
				}
				set_variable = {
					last_year_debt = GDP_Debt_Ratio
				}
				#Food YOY
				set_variable = {
					yoy_change_food = FoodBalanceTotal
				}
				subtract_from_variable = {
					yoy_change_food = last_year_food
				}
				set_variable = {
					last_year_food = FoodBalanceTotal
				}
				#Electricity YOY
				set_variable = {
					yoy_change_electricty = resource@electricity
				}
				subtract_from_variable = {
					yoy_change_electricty = last_year_electricty
				}
				set_variable = {
					last_year_electricty = resource@electricity
				}
				#Balance YOY
				set_variable = {
					yoy_change_balance = IncomeCheck
				}
				subtract_from_variable = {
					yoy_change_balance = last_year_balance
				}
				set_variable = {
					last_year_balance = IncomeCheck
				}
			}
			add_to_array = {
				Month_Label = Current_Month
			}
			if = {	#keeps in balance
				limit = {
					check_variable = { month_counter > 20 }
				}
				remove_from_array = { array = Month_Label index = 0 }
			}
			#ENG = {
			#	calculate_div_limit = yes
			#	if = {
			#		limit = {
			#			has_completed_focus = UK_60s_Amalgamate_Our_Regiments
			#			check_variable = { div_limit < num_divisions }
			#		}
			#		add_ideas = ENG_div_limit_exceededz
			#		country_event = ENG_event.23
			#	}
			#}
		}
	}
	# country 
	on_new_term_election = {
		random_events = {
			100 = usa.1002
			100 = usa.19603
			100 = usa.19563
			100 = usa.19643
			100 = usa.19683
			100 = usa.19723
			100 = usa.19763
			100 = usa.19803
			100 = usa.19843
			100 = usa.19883
			100 = usa.19923
			100 = usa.19963
			100 = usa.20003
			100 = usa.20043
			100 = usa.20083
			100 = usa.20123
			100 = usa.20163
		}
		random_events = {
			100 = Canada_Elections.1
			100 = Canada_Elections.2
			100 = Canada_Elections.3
			100 = Canada_Elections.4
		}
		random_events = {
			100 = cw_saf.20
			100 = cw_saf.1
		}
		random_events = {
			100 = India_Elections.1
			100 = India_Elections.2
			100 = India_Elections.3
			100 = India_Elections.4
			100 = India_Elections.5
			100 = India_Elections.6
		}
		random_events = {
			100 = election.1
		}
		random_events = {
			100 = mex.1
			100 = mex.2
		}
		random_events = {
			100 = wgr.2500
			100 = wgr.200
			100 = wgr.201
			100 = wgr.202
			100 = wgr.204
			100 = wgr.205
			100 = wgr.206
			100 = wgr.207
			100 = wgr.208
			100 = wgr.209
			100 = wgr.210
			100 = wgr.211
		}
		random_events = {
			100 = ita.200
			100 = ita.250
			100 = ita.201
		}
		random_events = {
			100 = por.1
			100 = por.2
		}
		random_events = {
			100 = fin.200
			100 = fin.201
			100 = fin.202
			100 = fin.203
			100 = fin.204
			100 = fin.205
			100 = fin.206
		}
		random_events = {
			100 = cw_saf.1
			100 = cw_saf.20
			100 = saf_elections.1
			100 = saf_elections.2
			100 = saf_elections.3
		}
		#random_events = {
		#	100 = SWE_Elections.1
		#	100 = SWE_Elections.2
		#	100 = SWE_Elections.3
		#	100 = SWE_Elections.4
		#	100 = SWE_Elections.5
		#	100 = SWE_Elections.6
		#	100 = SWE_Elections.7
		#	100 = SWE_Elections.8
		#	100 = SWE_Elections.9
		#	100 = SWE_Elections.10
		#}
		random_events = {
			100 = rho.1
			100 = rho.104
			100 = rho.126
			100 = rho.127
			100 = rho.128
		}
		random_events = {
			100 = cuba.25
		}
		random_events = {
			100 = iree.1
			100 = iree.2
			100 = iree.3
		}
		random_events = {
			100 = swi_elections.1
			100 = swi_elections.2
			100 = swi_elections.3
			100 = swi_elections.4
		}
		random_events = {
			100 = BEL49_Election.0
			100 = BEL50_Election.0
			100 = BEL54_Election.0
			100 = BEL58_Election.0
		}
	}

	# Ace pilots
	# country, FROM = ace
	on_ace_promoted = {
		random_events = {
			#100 = ace_promoted.1
			#5 = ace_promoted.2
		}
	}

	# country, FROM = ace, PREV = enemy ace 
	# This event fires twice, once for each ace.
	on_aces_killed_each_other = {
		random_events = {
			#100 = aces_killed_each_other.1
		}
	}
	
	# country, FROM = our ace, 
	# PREV = enemy ace, has killed FROM
	on_ace_killed_by_ace = {
		random_events = {
			#100 = ace_killed_by_ace.1
		}
	}

	# country, FROM = our ace, 
	# PREV = enemy ace, killed by FROM
	on_ace_killed_other_ace = {
		random_events = {
			#100 = ace_killed_other_ace.1
		}
	}

	# country, FROM = ace
	on_ace_killed = {
		random_events = {
			#100 = ace_died.1
		}
	}
	# During justifying wargoals
	# triggered daily, so make sure there is a sink somewhere not firing events
	# country, FROM = target nation
	on_justifying_wargoal_pulse = {
		random_events = {
			1000 = NATO.1
		}
		random_events = {
			100 = war_justification.1
			100 = war_justification.2
			100 = war_justification.3
			100 = war_justification.4
			100 = war_justification.5
			100 = war_justification.6
			100 = war_justification.7
			100 = war_justification.8
			100 = war_justification.9
			100 = war_justification.10
			100 = war_justification.11
			100 = war_justification.12
			100 = war_justification.13
			100 = war_justification.14
			100 = war_justification.15
			100 = war_justification.16
			100 = war_justification.17
			100 = war_justification.18
			100 = war_justification.19
			17000 = 0
		}
	}
	on_wargoal_expire = {
		random_events = {
			100 = war_justification.301
		}
	}
	on_leave_faction = {
		effect = {
			FROM = {
				add_opinion_modifier = {
					modifier = faction_traitor
					target = ROOT
					days = 365
				}
			
				add_opinion_modifier = {
					modifier = faction_traitor_trade
					target = ROOT
					days = 365
				}
			}
			if = {
				limit = {
					FROM = {
						has_idea = nato_member
					}
				}
				remove_ideas = nato_member
			}
		}
	}

	#FROM is faction leader on join faction requests.
	on_join_faction = {
		effect = {
			if = {
				limit = {
					FROM = {
						has_idea = nato_member
					}
				}
				add_ideas = nato_member
			}
		}
	}
	on_release_as_puppet = {
		effect = {
			if = {
				limit = {
					ROOT = { tag = YUG }
					FROM = { tag = SOV }
				}
				remove_ideas = YUG_anti_soviet
				set_politics = {
					ruling_party = trotskyism #dont change this at all!! it will play into YUG 60s Content. Under agreement with Stalin, Tito gets to stay in power and do whatever he wants as long as he allows soviet troops in the country and back up the USSR diplomatically.
				}
				add_popularity = {
					ideology = trotskyism
					popularity = 0.6
				}
				add_popularity = {
					ideology = communism
					popularity = 0.4
				}
			}
		}
	}
	# ROOT is attacker, FROM is defender
	on_declare_war = {
		effect = {
			if = {
				limit = {
					OR = {
						AND = {
							ROOT = { tag = SOV }
							FROM = { tag = PRC }
						}
						AND = {
							ROOT = { tag = PRC }
							FROM = { tag = SOV }
						}
					}
				}
				Sino_Soviet_War = yes
			}
			hidden_effect = {
				# Remove Influence modifiers if any
				FROM = { country_event = influence.10 }
			}
			# Check for attack on NATO Member
			if = {
				limit = {
					OR = {
						# Attacked a NATO member
						FROM = { has_idea = nato_member }
						# Attacked a puppet of a NATO member
						FROM = {
							is_subject = yes
							OVERLORD = { has_idea = nato_member }
							has_civil_war = no # check if this is a NATO puppet's civil war
							NOT = { is_in_faction_with = FRE } # checks to see country isnt in faction with CEFEO
						}
					}
				}
				custom_effect_tooltip = TT_CALL_NATO
				if = { limit = { NOT = { has_global_flag = NATO_called_to_arms } }
					FROM = { country_event = NATO.2 }
				}
				set_country_flag = Attacked_NATO
				# if a NATO member attacks another NATO member, kick him from NATO
				if = {
					limit = {
						has_idea = nato_member
						OR = {
							FROM = { has_idea = nato_member }
							FROM = {
								is_subject = yes
								OVERLORD = { has_idea = nato_member }
							}
						}
					}
					custom_effect_tooltip = TT_CALL_NATO
					FROM = { country_event = NATO.20 }
					remove_ideas = nato_member
				}
			}
		}
	}
	
	# When a new faction is formed
	on_faction_formed = {
		effect = {
			news_event = news.159
		}
	}
	#ROOT is new controller #FROM is old controller #FROM.FROM is state ID
	on_state_control_changed = {
		effect = {
			if = {
				limit = {
					FROM.FROM = {
						state = 905
					}
					tag = EGY
					NOT = {
						has_global_flag = Fall_of_Hatay
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Hatay
				news_event = THIRD_BALKAN_WAR.63
			}
			if = {
				limit = {
					FROM.FROM = {
						state = 47
					}
					tag = TUR
					NOT = {
						has_global_flag = Fall_of_Athens
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Athens
				news_event = THIRD_BALKAN_WAR.59
			}
			if = {
				limit = {
					FROM.FROM = {
						state = 341
					}
					OR = {
						tag = GRE
						tag = PDG
					}
					NOT = {
						has_global_flag = Fall_of_Istanbul
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Istanbul
				news_event = THIRD_BALKAN_WAR.60
			}
			if = {
				limit = {
					FROM.FROM = {
						state = 937
					}
					OR = {
						tag = GRE
						tag = PDG
					}
					NOT = {
						has_global_flag = Fall_of_Edirine
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Edirine
				news_event = THIRD_BALKAN_WAR.67
			}		
			if = {
				limit = {
					FROM.FROM = {
						state = 340
					}
					OR = {
						tag = GRE
						tag = PDG
					}
					NOT = {
						has_global_flag = Fall_of_Bursa
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Bursa
				news_event = THIRD_BALKAN_WAR.68
			}		
			if = {
				limit = {
					FROM.FROM = {
						state = 339
					}
					OR = {
						tag = GRE
						tag = PDG
					}
					NOT = {
						has_global_flag = Fall_of_Izmir
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Izmir
				news_event = THIRD_BALKAN_WAR.69
			}	
			if = {
				limit = {
					FROM.FROM = {
						state = 339
					}
					OR = {
						tag = GRE
						tag = PDG
					}
					NOT = {
						has_global_flag = Fall_of_Ankara
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Ankara
				news_event = THIRD_BALKAN_WAR.70
			}	
			if = {
				limit = {
					FROM.FROM = {
						state = 184
					}
					tag = TUR
					NOT = {
						has_global_flag = Fall_of_Kavala
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Kavala
				news_event = THIRD_BALKAN_WAR.71
			}
			if = {
				limit = {
					FROM.FROM = {
						state = 977
					}
					tag = TUR
					NOT = {
						has_global_flag = Fall_of_Thessaloniki
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Thessaloniki
				news_event = THIRD_BALKAN_WAR.72
			}
			if = {
				limit = {
					FROM.FROM = {
						state = 164
					}
					tag = TUR
					NOT = {
						has_global_flag = Fall_of_Rhodes
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Rhodes
				news_event = THIRD_BALKAN_WAR.73
			}
			if = {
				limit = {
					FROM.FROM = {
						state = 185
					}
					tag = TUR
					NOT = {
						has_global_flag = Fall_of_Ioannina
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Ioannina
				news_event = THIRD_BALKAN_WAR.74
			}
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 912
							state = 915
							state = 183
						}
					}
					tag = TUR
					controls_state = 912
					controls_state = 915
					controls_state = 183
					NOT = {
						has_global_flag = Fall_of_Cyprus_TUR
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Cyprus_TUR
				news_event = THIRD_BALKAN_WAR.61
			}
			if = {
				limit = {
					FROM.FROM = {
						OR = {
							state = 912
							state = 915
							state = 183
						}
					}
					OR = {
						tag = GRE
						tag = PDG
					}
					controls_state = 912
					controls_state = 915
					controls_state = 183
					NOT = {
						has_global_flag = Fall_of_Cyprus_GRE
					}
					has_global_flag = Third_Balkan_War	
				}
				set_global_flag = Fall_of_Cyprus_GRE
				news_event = THIRD_BALKAN_WAR.62
			}

			if = {
				limit = {
					tag = SOV
					NOT = { has_global_flag = conquest_helsinki_ussr }
					111 = { 
						is_controlled_by = SOV 
						is_owned_by = FIN 
					}
					SOV = { has_war_with = FIN }
				}
				news_event = conquest.1
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 78
					}
				}
				1235 = {
					add_core_of = SOV
				}
				78 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 949
					}
				}
				949 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 230
					}
				}
				230 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 231
					}
				}
				231 = {
					add_core_of = SOV
				}
				934 = {
					add_core_of = SOV
				}
				933 = {
					add_core_of = SOV
				}
			}
			if = {
				limit = {
					tag = SOV
					OR = {
						owns_state = 229
					}
				}
				229 = {
					add_core_of = SOV
				}
				799 = {
					add_core_of = SOV
				}
				935 = {
					add_core_of = SOV
				}
				798 = {
					add_core_of = SOV
				}
				419 = {
					add_core_of = SOV
				}
			}
		}
	}

	#FROM is the state nuked
	on_nuke_drop = {
		effect = {
			if = { 
				limit = {
					FROM = {
						is_core_of = USA 
					}
					USA = {
						has_country_flag = SDI_suceed
					}
				} 
				#news_event SDI sucessful shootdown	
			}
			if = {
				limit = {
					NOT = {
						has_global_flag = wmd_first_nuke
					} 
				} #First Nuke
				set_global_flag = wmd_first_nuke
				news_event = nuke_dropped.1
			}
			if = { 
				limit = { 
					FROM = {
						state = 529 
					} 
					NOT = { 
						has_global_flag = hiroshima_nuked 
					} 
				} 
				news_event = nuke_dropped.2
			} #Hiroshima
			else_if = { limit = { FROM = { state = 528 } NOT = { has_global_flag = nagasaki_nuked } } news_event = nuke_dropped.3 } #Nagasaki
			else_if = { limit = { FROM = { state = 742 } NOT = { has_global_flag = berlin_nuked } } news_event = nuke_dropped.4 } #West Berlin
			else_if = { limit = { FROM = { state = 744 } NOT = { has_global_flag = berlin_nuked } } news_event = nuke_dropped.4 } #East Berlin
			else_if = { limit = { FROM = { state = 126 } NOT = { has_global_flag = london_nuked } } news_event = nuke_dropped.5 } #London
			else_if = { limit = { FROM = { state = 531 } NOT = { has_global_flag = kyoto_nuked } } news_event = nuke_dropped.6 } #Kyoto
			else_if = { limit = { FROM = { state = 282 } NOT = { has_global_flag = tokyo_nuked } } news_event = nuke_dropped.7 } #Tokyo
			else_if = { limit = { FROM = { state = 1200 } NOT = { has_global_flag = washington_nuked } } news_event = nuke_dropped.8 } #Washington
			else_if = { limit = { FROM = { state = 2 } NOT = { has_global_flag = rome_nuked } } news_event = nuke_dropped.9 } #Rome
			else_if = { limit = { FROM = { state = 16 } NOT = { has_global_flag = paris_nuked } } news_event = nuke_dropped.10 } #Paris
			else_if = { limit = { FROM = { state = 219 } NOT = { has_global_flag = moscow_nuked } } news_event = nuke_dropped.11 } #Moscow
			else_if = { limit = { FROM = { state = 37 } NOT = { has_global_flag = copenhagen_nuked } } news_event = nuke_dropped.12 } #Copenhagen
			else_if = { limit = { FROM = { state = 141 } NOT = { has_global_flag = stockholm_nuked } } news_event = nuke_dropped.13 } #Stockholm
			wmd_damage_loop_effect = yes
		}

		random_events = {
			# 100 = nuke_dropped.0
			# 10000 = nuke_dropped.100
		}
	}

	#ROOT is winner, FROM gets annexed
	on_annex = {
		effect = {
			
			if = {
				limit = {
					tag = DDR
					FROM = {
						tag = WGR
					}
				}
				East_German_Reunification = yes
			}
			if = {
				limit = {
					tag = KPA
					FROM = {
						tag = KOR
					}
				}
				korean_war_north_victory_super_event = yes
			}
			if = {
				limit = {
					date < 1959.12.31
					FROM = { TAG = GRE }
					ROOT = { TAG = PDG }				
				}
				PDG = { set_capital = { state = 47 } }
			}
		}
	}
	#Not run on a specific country.
	on_startup = {
		effect = {
			#Espionage Stuff
			USA = {
				add_to_array = {
					black_ops_project_list = 100
				}
				add_to_array = {
					black_ops_project_list = 1
				}
				add_to_array = { espionage_paramilitary_operative_type = 2 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 3 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 4 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 5 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 6 }
				add_to_array = { espionage_paramilitary_operative_name_type = GER.id }
				add_to_array = { espionage_paramilitary_operative_type = 7 }
				add_to_array = { espionage_paramilitary_operative_name_type = GER.id }
				add_to_array = { espionage_paramilitary_operative_type = 8 }
				add_to_array = { espionage_paramilitary_operative_name_type = ITA.id }
				add_to_array = { espionage_paramilitary_operative_type = 9 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 10 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 11 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 12 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
				add_to_array = { espionage_paramilitary_operative_type = 13 }
				add_to_array = { espionage_paramilitary_operative_name_type = USA.id }
			}
			SOV = {
				add_to_array = {
					black_ops_project_list = 500	#Pacifying Western Ukraine
				}
				add_to_array = {
					black_ops_project_list = 501	#Restoring Order to the Baltics
				}
				add_to_array = {
					black_ops_project_list = 100	#El Generico
				}
			}
			#Add Check for Bookmark 

			#Space Techs Setup
			add_to_array = { global.space_research_categories = 1 } #structural_components
			add_to_array = { global.space_research_categories = 2 } #propulsion_components
			add_to_array = { global.space_research_categories = 3 } #power_components
			add_to_array = { global.space_research_categories = 4 } #data_components

			add_to_array = { global.space_research_propulsion_categories = 1 }	#Chemical
			add_to_array = { global.space_research_propulsion_categories = 2 }	#Electrical
			add_to_array = { global.space_research_propulsion_categories = 3 }	#Nuclear

			add_to_array = { global.structural_components_year = 1940 } add_to_array = { global.structural_components = 1 }  #Wood and Metal Vessel Frames
			add_to_array = { global.structural_components_year = 1945 } add_to_array = { global.structural_components = 2 }  #2-4 Meter Pressure Vessels    #Requires Advanced Rocketry
			add_to_array = { global.structural_components_year = 1950 } add_to_array = { global.structural_components = 3 }     #Stainless Steel
			add_to_array = { global.structural_components_year = 1950 } add_to_array = { global.structural_components = 4 }     #Continuous Pressurization  
			add_to_array = { global.structural_components_year = 1955 } add_to_array = { global.structural_components = 5 }  #4-8 Meter Pressure Vessels    #Requires IRBM I
			add_to_array = { global.structural_components_year = 1960 } add_to_array = { global.structural_components = 6 }     #Common Bulkhead
			add_to_array = { global.structural_components_year = 1960 } add_to_array = { global.structural_components = 7 }     #Balloon Tanks
			add_to_array = { global.structural_components_year = 1965 } add_to_array = { global.structural_components = 8 }  #8-12 Meter Pressure Vessels   #Requires ICBM I
			add_to_array = { global.structural_components_year = 1970 } add_to_array = { global.structural_components = 9 }     #Advanced Plumbing
			add_to_array = { global.structural_components_year = 1970 } add_to_array = { global.structural_components = 10 }    #Anti-slosh/vortex baffles
			add_to_array = { global.structural_components_year = 1975 } add_to_array = { global.structural_components = 11 } #12-16 Meter Pressure Vessels  #Requires ICBM 2
			add_to_array = { global.structural_components_year = 1980 } add_to_array = { global.structural_components = 12 }    #Titanium Frame Construction
			add_to_array = { global.structural_components_year = 1980 } add_to_array = { global.structural_components = 13 }    #Pressure Vessel Temperature Control
			add_to_array = { global.structural_components_year = 1985 } add_to_array = { global.structural_components = 14 } #16-24 Meter Pressure Vessels  #Requires ICBM 3
			add_to_array = { global.structural_components_year = 1990 } add_to_array = { global.structural_components = 15 }    #Carbon Fiber Composites
			add_to_array = { global.structural_components_year = 1990 } add_to_array = { global.structural_components = 16 }    #External Fuel Tanks
			add_to_array = { global.structural_components_year = 1995 } add_to_array = { global.structural_components = 17 } #24-30 Meter Pressure Vessels  #Requires ICBM 4
			add_to_array = { global.structural_components_year = 2000 } add_to_array = { global.structural_components = 18 }    #Aluminum-Lithium Alloys
			add_to_array = { global.structural_components_year = 2010 } add_to_array = { global.structural_components = 19 }    #Carbon Fibre Segments
			add_to_array = { global.structural_components_year = 2000 } add_to_array = { global.structural_components = 20 }    #Super Lightweight Tanks
			add_to_array = { global.structural_components_year = 2010 } add_to_array = { global.structural_components = 21 }    #Helium Pressurization
			add_to_array = { global.structural_components_year = 2020 } add_to_array = { global.structural_components = 22 }    #Orbital Ship Construction

			#Requires Advanced Rocketry | Gives Bonuses Towards Ballistic Missile Tech on Completion
			add_to_array = { global.chemical_propulsion_components_year = 1940 } add_to_array = { global.chemical_propulsion_components = 1 } #Liquid-propellant Rocket
			add_to_array = { global.chemical_propulsion_components_year = 1945 } add_to_array = { global.chemical_propulsion_components = 2 } #Hybrid Propellant Rocket
			add_to_array = { global.chemical_propulsion_components_year = 1950 } add_to_array = { global.chemical_propulsion_components = 3 } #Solid-propellant Rocket
			add_to_array = { global.chemical_propulsion_components_year = 1960 } add_to_array = { global.chemical_propulsion_components = 4 } #Chryogenic Rocket
			add_to_array = { global.chemical_propulsion_components_year = 1975 } add_to_array = { global.chemical_propulsion_components = 5 } #Dual Mode Propulsion Rocket
			add_to_array = { global.chemical_propulsion_components_year = 1990 } add_to_array = { global.chemical_propulsion_components = 6 } #Tri-propellant Rockets
			add_to_array = { global.chemical_propulsion_components_year = 2005 } add_to_array = { global.chemical_propulsion_components = 7 } #Variable Thrust Solid Rocket
			add_to_array = { global.chemical_propulsion_components_year = 2020 } add_to_array = { global.chemical_propulsion_components = 8 } #Precooled Air-breathing Rocket Engines

			# Requires propulsion_components = 3 } #Solid-propellant Rocket
			add_to_array = { global.electricity_propulsion_components_year = 1955 } add_to_array = { global.electricity_propulsion_components = 1 }  #Electric Propulsion Theory
			add_to_array = { global.electricity_propulsion_components_year = 1960 } add_to_array = { global.electricity_propulsion_components = 2 } #Pulsed Plasma Thruster
			add_to_array = { global.electricity_propulsion_components_year = 1980 } add_to_array = { global.electricity_propulsion_components = 3 } #Pulsed Inductive Thruster
			add_to_array = { global.electricity_propulsion_components_year = 2000 } add_to_array = { global.electricity_propulsion_components = 4 } #Magnetoplasmadynamic Thruster
			add_to_array = { global.electricity_propulsion_components_year = 2025 } add_to_array = { global.electricity_propulsion_components = 5 } #VASIMIR

			add_to_array = { global.electricity_propulsion_components_year = 1960 } add_to_array = { global.electricity_propulsion_components = 6 } #Gridded Ion Thruster  #Requires Electric Propulsion Theory
			add_to_array = { global.electricity_propulsion_components_year = 1970 } add_to_array = { global.electricity_propulsion_components = 7 } #Hall Effect Thruster
			add_to_array = { global.electricity_propulsion_components_year = 1990 } add_to_array = { global.electricity_propulsion_components = 8 } #Advanced Gridded Ion Thruster
			add_to_array = { global.electricity_propulsion_components_year = 2025 } add_to_array = { global.electricity_propulsion_components = 9 } #Field-emmission Electric Propulsion

			add_to_array = { global.electricity_propulsion_components_year = 1965 } add_to_array = { global.electricity_propulsion_components = 10 } #Resistojet Thruster   #Requires Electric Propulsion Theory
			add_to_array = { global.electricity_propulsion_components_year = 1985 } add_to_array = { global.electricity_propulsion_components = 11 } #Arcjet Thruster
			add_to_array = { global.electricity_propulsion_components_year = 2005 } add_to_array = { global.electricity_propulsion_components = 12 } #Wakefield Electron Beam
			add_to_array = { global.electricity_propulsion_components_year = 2025 } add_to_array = { global.electricity_propulsion_components = 13 } #Microwave Electrothermal Thruster

			# Requires propulsion_components = 3 } #Solid-propellant Rocket & Small Scale Nuclear Reactor
			add_to_array = { global.nuclear_propulsion_components_year = 1955 } add_to_array = { global.nuclear_propulsion_components = 1 } #Nuclear Propulsion Theory
			add_to_array = { global.nuclear_propulsion_components_year = 1965 } add_to_array = { global.nuclear_propulsion_components = 2 } #Solid Core Nuclear Thermal Rocket     #Requires Experimental Nuclear Engines
			add_to_array = { global.nuclear_propulsion_components_year = 1970 } add_to_array = { global.nuclear_propulsion_components = 3 }    #Bimodal Reactor
			add_to_array = { global.nuclear_propulsion_components_year = 1975 } add_to_array = { global.nuclear_propulsion_components = 4 } #Pebble Bed Solid Core Nuclear Thermal Rocket #Requires Basic Nuclear Engines
			add_to_array = { global.nuclear_propulsion_components_year = 1985 } add_to_array = { global.nuclear_propulsion_components = 5 } #Liquid Core Nuclear Thermal Rocket
			add_to_array = { global.nuclear_propulsion_components_year = 1995 } add_to_array = { global.nuclear_propulsion_components = 6 } #Droplet Core Nuclear Thermal Rocket
			add_to_array = { global.nuclear_propulsion_components_year = 2005 } add_to_array = { global.nuclear_propulsion_components = 7 } #Vapor Core Nuclear Thermal Rocket
			add_to_array = { global.nuclear_propulsion_components_year = 2015 } add_to_array = { global.nuclear_propulsion_components = 8 } #Closed Cycle Nuclear Thermal Rocket
			add_to_array = { global.nuclear_propulsion_components_year = 2025 } add_to_array = { global.nuclear_propulsion_components = 9 } #Open Cycle Nuclear Thermal Rocket
			# Requires Liquid Core Nuclear Thermal Rocket
			add_to_array = { global.nuclear_propulsion_components_year = 1990 } add_to_array = { global.nuclear_propulsion_components = 10 } #Fission Fragment
			add_to_array = { global.nuclear_propulsion_components_year = 2020 } add_to_array = { global.nuclear_propulsion_components = 11 } #Dusty Plasma Fission Fragment
			# Requires Nuclear Propulsion Theory & Basic Nuclear Engines
			add_to_array = { global.nuclear_propulsion_components_year = 1960 } add_to_array = { global.nuclear_propulsion_components = 12 } #Nuclear Pulse Propulsion
			add_to_array = { global.nuclear_propulsion_components_year = 1990 } add_to_array = { global.nuclear_propulsion_components = 13 } #Inertial Confinement Fusion Pulse Propulsion #Requires Fusion Reactor Theory
			add_to_array = { global.nuclear_propulsion_components_year = 2020 } add_to_array = { global.nuclear_propulsion_components = 14 } #Nuclear Pulse Sail Propulsion #Requires Tokamak Fusion Reactors

			add_to_array = { global.power_components_year = 1940 } add_to_array = { global.power_components = 1 } #Space-rated Mercuric Oxide Batteries
			add_to_array = { global.power_components_year = 1955 } add_to_array = { global.power_components = 2 } #Space-rated Nickel-Cadmium Batteries
			add_to_array = { global.power_components_year = 1965 } add_to_array = { global.power_components = 3 } #Hydrogen-Oxygen Fuel Cells
			add_to_array = { global.power_components_year = 1975 } add_to_array = { global.power_components = 4 } #Radioisotope Thermoelectric Generators
			add_to_array = { global.power_components_year = 1985 } add_to_array = { global.power_components = 5 } #Solar-Tracking Rotating Panels
			add_to_array = { global.power_components_year = 1995 } add_to_array = { global.power_components = 6 } #Microwave Power Transmission
			add_to_array = { global.power_components_year = 2005 } add_to_array = { global.power_components = 7 } #Space-rated Lithium Ion Batteries
			add_to_array = { global.power_components_year = 2015 } add_to_array = { global.power_components = 8 } #High Density Methane Fuel Cells

			add_to_array = { global.data_components_year = 1940 } add_to_array = { global.data_components = 1 } #Directional Antenna
			add_to_array = { global.data_components_year = 1960 } add_to_array = { global.data_components = 2 } #SSTV Image Transmission      #Requires Satellite Communication
			add_to_array = { global.data_components_year = 1980 } add_to_array = { global.data_components = 3 } #Geosynchronous Relay Communication Networks
			add_to_array = { global.data_components_year = 2000 } add_to_array = { global.data_components = 4 } #Broadband Internet         #Requires The New Internet and 4G LTE
			add_to_array = { global.data_components_year = 2020 } add_to_array = { global.data_components = 5 } #Laser-Space Communication   #Requires Information Age CE

######################################################################
#####################CWIC DEFINES, DO NOT TOUCH#######################
			#defines version
			set_variable = { ICDefinesVersion = 37 }
			#Use [?global.varname] in loc to display them
			#Use global.varname in scripts to use them
			#Banking Arrays
			add_to_array = { global.IMF_Interest_Rate = 7 }
			add_to_array = { global.IMF_Interest_Rate = 9 }
			add_to_array = { global.IMF_Interest_Rate = 12 }
			add_to_array = { global.IMF_Interest_Rate = 15 }

			add_to_array = { global.WBK_Interest_Rate = 1.35 }
			add_to_array = { global.WBK_Interest_Rate = 1.35 }
			add_to_array = { global.WBK_Interest_Rate = 1.62 }
			add_to_array = { global.WBK_Interest_Rate = 1.95 }
			add_to_array = { global.WBK_Interest_Rate = 2.34 }
			add_to_array = { global.WBK_Interest_Rate = 2.81 }
			add_to_array = { global.WBK_Interest_Rate = 3.37 }
			
			add_to_array = {
				global.WBK_Term_Lengths = 5
			}
			add_to_array = {
				global.WBK_Term_Lengths = 10
			}
			add_to_array = {
				global.WBK_Term_Lengths = 15
			}
			add_to_array = {
				global.WBK_Term_Lengths = 20
			}
			add_to_array = {
				global.WBK_Term_Lengths = 25
			}
			add_to_array = {
				global.WBK_Term_Lengths = 30
			}
			add_to_array = {
				global.WBK_Term_Lengths = 35
			}

			add_to_array = {
				global.International_Commercial_Term_Lengths = 5
			}

			add_to_array = {
				global.IMF_Term_Interest_Rate = 0.07
			}
			add_to_array = {
				global.IMF_Term_Interest_Rate = 0.09
			}
			add_to_array = {
				global.IMF_Term_Interest_Rate = 0.12
			}
			add_to_array = {
				global.IMF_Term_Interest_Rate = 0.15
			}

			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.005
			}
			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.007
			}
			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.01
			}
			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.015
			}
			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.02
			}
			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.027
			}
			add_to_array = {
				global.WBK_Term_Interest_Rate = 0.03
			}

			add_to_array = {
				global.IMF_Term_Lengths = 1
			}
			add_to_array = {
				global.IMF_Term_Lengths = 2
			}
			add_to_array = {
				global.IMF_Term_Lengths = 3
			}
			add_to_array = {
				global.IMF_Term_Lengths = 4
			}

			add_to_array = {
				global.Domestic_Commercial_Term_Lengths = 5
			}
			add_to_array = {
				global.Domestic_Commercial_Term_Lengths = 10
			}
			add_to_array = {
				global.Domestic_Commercial_Term_Lengths = 15
			}
			add_to_array = {
				global.Domestic_Commercial_Term_Lengths = 20
			}

			add_to_array = {
				global.Domestic_Reserve_Term_Lengths = 5
			}
			add_to_array = {
				global.Domestic_Reserve_Term_Lengths = 7
			}
			add_to_array = {
				global.Domestic_Reserve_Term_Lengths = 10
			}



			#Bulk is 10x the base
			#Large is 3x base
			#Upgrade cost categories = global.UPC_(category)
			#Upgrade cost telecoms = global.UPTC_(statesize(mini#mi-sma#/nominal#nom-med#/largo#lar+#))(com0-3)_(pop(small#1-2#/medium#3-5#/large#7-15#),overpopulated)
			#MercDuration is the length of the mercenary contract payments
	
			##Influence Defines##
			set_variable = { Exploit_Limit = 0.74}

			##Trade Defines##
			every_country = {
				add_to_array = {
					food_export_prior = 0
				}
				set_variable = {
					Current_Month = 5
				}
				add_to_array = {
					spacecraft_list = 1
				}
	
				add_to_array = {
					spacecraft_list = 2
				}
	
				add_to_array = {
					spacecraft_list = 3
				}
	
				add_to_array = {
					spacecraft_list = 4
				}
	
				add_to_array = {
					spacecraft_list = 5
				}
	
				add_to_array = {
					spacecraft_list = 6
				}
	
				add_to_array = {
					spacecraft_list = 7
				}
	
				add_to_array = {
					spacecraft_list = 8
				}
	
				add_to_array = {
					spacecraft_list = 9
				}
	
				add_to_array = {
					spacecraft_list = 10
				}
	
				add_to_array = {
					spacecraft_list = 11
				}
	
				add_to_array = {
					spacecraft_list = 12
				}
	
				add_to_array = {
					spacecraft_list = 13
				}
	
				add_to_array = {
					spacecraft_list = 14
				}
	
				add_to_array = {
					spacecraft_list = 15
				}
	
				add_to_array = {
					spacecraft_list = 16
				}
	
				add_to_array = {
					spacecraft_list = 17
				}
	
				add_to_array = {
					spacecraft_list = 18
				}
	
				add_to_array = {
					spacecraft_list = 19
				}
	
				add_to_array = {
					spacecraft_list = 20
				}
	
				add_to_array = {
					spacecraft_list = 21
				}
	
				add_to_array = {
					spacecraft_list = 22
				}
	
				add_to_array = {
					spacecraft_list = 23
				}
	
				add_to_array = {
					spacecraft_list = 24
				}
	
				add_to_array = {
					spacecraft_list = 25
				}
	
				add_to_array = {
					spacecraft_list = 26
				}
	
				add_to_array = {
					spacecraft_list = 27
				}
	
				add_to_array = {
					spacecraft_list = 28
				}
	
				add_to_array = {
					spacecraft_list = 29
				}
	
				add_to_array = {
					spacecraft_list = 30
				}
	
				add_to_array = {
					spacecraft_list = 31
				}
	
				add_to_array = {
					spacecraft_list = 32
				}
	
				add_to_array = {
					spacecraft_list = 33
				}
	
				add_to_array = {
					spacecraft_list = 34
				}
	
				add_to_array = {
					spacecraft_list = 35
				}
	
				add_to_array = {
					spacecraft_list = 36
				}
	
				add_to_array = {
					spacecraft_list = 37
				}
	
				add_to_array = {
					spacecraft_list = 38
				}
	
				add_to_array = {
					spacecraft_list = 39
				}
	
				add_to_array = {
					spacecraft_list = 40
				}
	
				add_to_array = {
					spacecraft_list = 41
				}
				add_to_array = {
					spacecraft_list = 42
				}
	
				add_to_array = {
					vessel_list = 1
				}
				add_to_array = {
					vessel_list = 2
				}
				add_to_array = {
					vessel_list = 3
				}
				add_to_array = {
					vessel_list = 4
				}
				add_to_array = {
					vessel_list = 5
				}
				add_to_array = {
					vessel_list = 6
				}
				add_to_array = {
					vessel_list = 7
				}
					add_to_array = {
						mission_list = 2
					}
	
					add_to_array = {
						mission_list = 3
					}
	
					add_to_array = {
						mission_list = 4
					}
	
					add_to_array = {
						mission_list = 5
					}
	
					add_to_array = {
						mission_list = 6
					}
	
					add_to_array = {
						mission_list = 7
					}
	
					add_to_array = {
						mission_list = 8
					}
	
					add_to_array = {
						mission_list = 9
					}
	
					add_to_array = {
						mission_list = 12
					}
	
					add_to_array = {
						mission_list = 13
					}
	
					add_to_array = {
						mission_list = 14
					}
	
					add_to_array = {
						mission_list = 15
					}
	
					add_to_array = {
						mission_list = 17
					}
	
					add_to_array = {
						mission_list = 18
					}
	
					add_to_array = {
						mission_list = 19
					}
	
					add_to_array = {
						mission_list = 20
					}
	
					add_to_array = {
						mission_list = 22
					}
	
					add_to_array = {
						mission_list = 23
					}
	
					add_to_array = {
						mission_list = 24
					}
	
					add_to_array = {
						mission_list = 25
					}
	
					add_to_array = {
						mission_list = 28
					}
	
					add_to_array = {
						mission_list = 29
					}
	
					add_to_array = {
						mission_list = 31
					}
	
					add_to_array = {
						mission_list = 32
					}
	
					add_to_array = {
						mission_list = 33
					}
	
					add_to_array = {
						mission_list = 34
					}
	
					add_to_array = {
						mission_list = 35
					}
	
					add_to_array = {
						mission_list = 36
					}
	
					add_to_array = {
						mission_list = 37
					}
	
					add_to_array = {
						mission_list = 38
					}
	
					add_to_array = {
						mission_list = 40
					}
	
					add_to_array = {
						mission_list = 41
					}
			}

			#HDI Values 
			add_to_array = { global.sol_cost = 0.002 }
			add_to_array = { global.sol_cost = 0.003 }
			add_to_array = { global.sol_cost = 0.004 }
			add_to_array = { global.sol_cost = 0.005 }
			add_to_array = { global.sol_cost = 0.006 }
			add_to_array = { global.sol_cost = 0.007 }
			add_to_array = { global.sol_cost = 0.008 }
			add_to_array = { global.sol_cost = 0.009 }
			add_to_array = { global.sol_cost = 0.010 }
			add_to_array = { global.sol_cost = 0.011 }
			add_to_array = { global.sol_cost = 0.012 }
			add_to_array = { global.sol_cost = 0.013 }
			add_to_array = { global.sol_cost = 0.015 }
			add_to_array = { global.sol_cost = 0.016 }
			add_to_array = { global.sol_cost = 0.018 }
			add_to_array = { global.sol_cost = 0.019 }
			add_to_array = { global.sol_cost = 0.021 }
			add_to_array = { global.sol_cost = 0.024 }
			add_to_array = { global.sol_cost = 0.026 }
			add_to_array = { global.sol_cost = 0.029 }
			add_to_array = { global.sol_cost = 0.031 }
			add_to_array = { global.sol_cost = 0.035 }
			add_to_array = { global.sol_cost = 0.038 }
			add_to_array = { global.sol_cost = 0.042 }
			add_to_array = { global.sol_cost = 0.046 }
			add_to_array = { global.sol_cost = 0.051 }
			add_to_array = { global.sol_cost = 0.056 }
			add_to_array = { global.sol_cost = 0.061 }
			add_to_array = { global.sol_cost = 0.067 }
			add_to_array = { global.sol_cost = 0.074 }
			add_to_array = { global.sol_cost = 0.081 }
			add_to_array = { global.sol_cost = 0.090 }
			add_to_array = { global.sol_cost = 0.098 }
			add_to_array = { global.sol_cost = 0.108 }
			add_to_array = { global.sol_cost = 0.119 }
			add_to_array = { global.sol_cost = 0.131 }
			add_to_array = { global.sol_cost = 0.144 }
			add_to_array = { global.sol_cost = 0.159 }
			add_to_array = { global.sol_cost = 0.174 }
			add_to_array = { global.sol_cost = 0.192 }
			add_to_array = { global.sol_cost = 0.211 }
			add_to_array = { global.sol_cost = 0.232 }
			add_to_array = { global.sol_cost = 0.255 }
			add_to_array = { global.sol_cost = 0.281 }
			add_to_array = { global.sol_cost = 0.309 }
			add_to_array = { global.sol_cost = 0.340 }
			add_to_array = { global.sol_cost = 0.374 }
			add_to_array = { global.sol_cost = 0.411 }
			add_to_array = { global.sol_cost = 0.453 }
			add_to_array = { global.sol_cost = 0.498 }
			add_to_array = { global.sol_cost = 0.548 }
			add_to_array = { global.sol_cost = 0.602 }
			add_to_array = { global.sol_cost = 0.663 }
			add_to_array = { global.sol_cost = 0.729 }
			add_to_array = { global.sol_cost = 0.802 }
			add_to_array = { global.sol_cost = 0.882 }
			add_to_array = { global.sol_cost = 0.970 }
			add_to_array = { global.sol_cost = 1.067 }
			add_to_array = { global.sol_cost = 1.174 }
			add_to_array = { global.sol_cost = 1.291 }
			add_to_array = { global.sol_cost = 1.420 }
			add_to_array = { global.sol_cost = 1.562 }
			add_to_array = { global.sol_cost = 1.719 }
			add_to_array = { global.sol_cost = 1.891 }
			add_to_array = { global.sol_cost = 2.080 }
			add_to_array = { global.sol_cost = 2.288 }
			add_to_array = { global.sol_cost = 2.516 }
			add_to_array = { global.sol_cost = 2.768 }
			add_to_array = { global.sol_cost = 3.045 }
			add_to_array = { global.sol_cost = 3.349 }
			add_to_array = { global.sol_cost = 3.684 }
			add_to_array = { global.sol_cost = 4.053 }
			add_to_array = { global.sol_cost = 4.458 }
			add_to_array = { global.sol_cost = 4.904 }
			add_to_array = { global.sol_cost = 5.394 }
			add_to_array = { global.sol_cost = 5.933 }
			add_to_array = { global.sol_cost = 6.527 }
			add_to_array = { global.sol_cost = 7.180 }
			add_to_array = { global.sol_cost = 7.897 }
			add_to_array = { global.sol_cost = 8.687 }
			add_to_array = { global.sol_cost = 9.556 }
			add_to_array = { global.sol_cost = 10.512 }
			add_to_array = { global.sol_cost = 11.563 }
			add_to_array = { global.sol_cost = 12.719 }
			add_to_array = { global.sol_cost = 13.991 }
			add_to_array = { global.sol_cost = 15.390 }
			add_to_array = { global.sol_cost = 16.929 }
			add_to_array = { global.sol_cost = 18.622 }
			add_to_array = { global.sol_cost = 20.484 }
			add_to_array = { global.sol_cost = 22.532 }
			add_to_array = { global.sol_cost = 24.786 }
			add_to_array = { global.sol_cost = 27.264 }
			add_to_array = { global.sol_cost = 29.991 }
			add_to_array = { global.sol_cost = 32.990 }
			add_to_array = { global.sol_cost = 36.289 }
			add_to_array = { global.sol_cost = 39.918 }
			add_to_array = { global.sol_cost = 43.909 }
			add_to_array = { global.sol_cost = 48.300 }
			add_to_array = { global.sol_cost = 53.130 }
			add_to_array = { global.sol_cost = 58.443 }

			#END
			set_variable = { global.base_transport_cost_divisor = 200 } #How much to divide distance_to@state to get the transport cost for state to state trade.
			set_variable = { global.base_shipping_cost_divisor = 1000 } #How much to divide distance_to@state to get the shipping cost for country to country trade.


			#Starting Resource Prices
			set_variable = { oilBasePrice = 0.15 }
			set_variable = { steelBasePrice = 0.1 }
			set_variable = { foodBasePrice = 0.05 }
			set_variable = { chromiumBasePrice = 0.25 }
			set_variable = { rareEarthBasePrice = 0.2 }
			set_variable = { aluminiumBasePrice = 0.1 } 



			#STELLAR AI# 
			#AI RATIOS FOR ECONOMICS AND BUILDING#
			set_variable = { ai_power_ratio = 0.25 } #Ratio of power plants to office park/industrial park/dockyard/military factory
			set_variable = { ai_office_ratio = 0.25 } #Ratio of office parks to industrial parks
			set_variable = { ai_agri_investment = 0.20 } #Percentage of industry to invest in agri-industrial complexes until positive
			set_variable = { ai_water_point = 25 } #Number of factories minimum to start investing 15 industrial parks regularly to building water infra
			set_variable = { ai_renewable_point = 45 } #Number of factories minimum to start diverting to renewable and nuclear power
			set_variable = { ai_renewable_ratio = 0.3 } #Ratio of renewable to fossil when the renewable point is reached
			set_variable = { ai_nuclear_ratio = 0.05 } #Ratio of nuclear to fossil when the renewable point is reached
			
			#DIVIDERS
			set_variable = { GlobalCredit = 0.45 } #Income from Production/Trade/Commerce
			set_variable = { GlobalTaxCredit = 1.00 } #Income from Taxes
			set_variable = { GlobalDebit = 0.28 } #Policy Expenses
			set_variable = { GlobalEdictDebit = 0.44 } #Edict/Program/Project Expenses
			
			set_variable = { PreindustrialTaxCredit = 0.5 }
			set_variable = { IndustrialTaxCredit = 1 }
			set_variable = { DevelopedTaxCredit = 1.25 }
			set_variable = { ModernTaxCredit = 1.5 }
			set_variable = { AutomatedTaxCredit = 1.75 }
			
			#ECOLOGICAL
			set_variable = { eco_health = 0.95 } #Starting planet/ecosystem hitpoints
			#{ eco_output_factor } Multiplicative #{ eco_output_rate } Additive Effect
			
			#Agency-related Variables#
			set_variable = { upgrades_per_operative = 10 }
			
			###WEAPON PURCHASE PRICES###
			#Guns, support equipment, towed support weapons
			set_variable = { WPTierOne = 10 }
			#Trucks, light sp support weapons, medium support weapons
			set_variable = { WPTierTwo = 20 }
			#IFVs, Heavy Support Weapons, Medium SP Weapons
			set_variable = { WPTierThree = 40 }
			#Jets, Tanks
			set_variable = { WPTierFour = 80 }
			#Bombers
			set_variable = { WPTierFive = 120 }
			#Frigates (x4), Destroyers (x2) Single-Small Submarines (x2)
			set_variable = { WPTierSix = 250 }
			#Cruisers, Light Carriers
			set_variable = { WPTierSeven = 350 }
			
			set_variable = { LargePer = 5 } #Large Purchase Price
			set_variable = { BulkPer = 20 } #Bulk Purchase Price
			
			set_variable = { SmallCooldown = 0.5 } #Years cooldown on 1x purchases
			set_variable = { LargeCooldown = 1.5 } #Years backorder on large purchases
			set_variable = { BulkCooldown = 2.5 } #Years backorder on bulk purchases
			set_variable = { SmallNavalCooldown = 1.5 } #Years backorder on small naval ships
			set_variable = { NominalNavalCooldown = 2 } #Years backorder on medium naval ships
			set_variable = { LargeNavalCooldown = 3 } #Years backorder on large naval ships
			
			#QUANTITIES#
            #Civ Market
            set_variable = { SupportPer = 250 }
            set_variable = { MotorPer = 2000 }
            set_variable = { UtilityHeliPer = 160}
            set_variable = { CargoHeliPer = 135}
            set_variable = { LightJetPer = 100 }
            set_variable = { TransportPer = 48}
            set_variable = { ConvoyPer = 57 }
            set_variable = { TrainPer = 15 }
            #By Contract
            set_variable = { InfantryPer = 2000 }
            set_variable = { InfantryBulkPer = 3500} #Bulk Sale highly outdated weapons
            set_variable = { InfantryPiratePer = 4000} #Exceptionally Poor Quality Black Market Weapons
            set_variable = { DFGPer = 650}
            set_variable = { ATGMPer = 400}
            set_variable = { AAPer = 650}
            set_variable = { SAMPer = 200}
            set_variable = { LtArtyPer = 1000}
            set_variable = { ArtyPer = 625}
            set_variable = { HtArtyPer = 500}
            set_variable = { LtPer = 320}
            set_variable = { MCVPer = 650}
            set_variable = { MBTPer = 535}
            set_variable = { APCPer = 650 }
            set_variable = { IFVPer = 280}
            set_variable = { ScoutHeliPer = 190}
            set_variable = { MultirolePer = 20}
            set_variable = { MultiroleBulkPer = 50} #Non-Jet
            set_variable = { CVMultirolePer = 30 }
            set_variable = { CVMultiroleBulkPer = 60} #Non-Jet 

			
			###MERCENARY VARIABLES###
			#HIRE COST IS DETERMINED BY SALARY + MANPOWER COST + EQUIPMENT COST#
			#COSTS#  #global.Merc[Grade]ManpowerPrice is the final cost per manpower. It is multiplied by the base cost
			set_variable = { MercMilitia = 25 } #SALARIES
			set_variable = { MercLight = 50 } #SALARIES
			set_variable = { MercMobile = 100 } #SALARIES
			set_variable = { MercPro = 300 } #SALARIES
			set_variable = { MercManpowerPrice = 0.01 } #Base cost of 1000 manpower to replenish or hire, multiplied by merc contract price
			
			set_variable = { MercYears = 0.5 } #INTERVAL/FREQUENCY OF PAYMENTS 
			#global.MercDuration# is the exported variable
			
			#GLOBAL MANPOWER#
			set_variable = { MercMilitiaManpower = 20000 } #Manpower per Company
			set_variable = { MercLightManpower = 10000 } #Manpower per Company
			set_variable = { MercMobileManpower = 10000 } #Manpower per Company
			set_variable = { MercProManpower = 5000 } #Manpower per Company
			set_variable = { MercManpowerReplenish = 0.02 } #Percent manpower to replenish per month
			#EQUIPMENT AVAILABLE#
			#1 merc equipment = 10 cost ic
			set_variable = { MercEquipmentPrice = 50 } #Price Per 100 Merc Equipment Piece Replenish
			set_variable = { MercEquipmentPer = 50 } #Maximum Merc Equipment Purchasable per Military Factory in ZA WUARDO
			set_variable = { MercEquipmentReplenish = 0.03 } #Percent Equipment in contract pool to Replenish per Month
			
			###RGO PURCHASE PRICES AND RESOURCE GAINS###
			#Rare Earths, Nuclear Materiel
			set_variable = { RGOResourceRareMicro = 3 }
			set_variable = { RGOResourceRareSmall = 6 }
			set_variable = { RGOResourceRareMedium = 8 }
			set_variable = { RGOResourceRareLarge = 12 }
			#Light Metals, Construction Metals, Food
			set_variable = { RGOResourceCommonMicro = 8 }
			set_variable = { RGOResourceCommonSmall = 12 }
			set_variable = { RGOResourceCommonMedium = 16 }
			set_variable = { RGOResourceCommonLarge = 24 }
			#Petrochemicals
			set_variable = { RGOResourcePetrolMicro = 8 }
			set_variable = { RGOResourcePetrolSmall = 12 }
			set_variable = { RGOResourcePetrolMedium = 18 }
			set_variable = { RGOResourcePetrolLarge = 24 }
			set_variable = { RGOResourcePetrolMega = 50 }
			
			##RGO Costs##
			set_variable = { RGOTierOne = 120 } #Small
			set_variable = { RGOTierTwo = 240 } #Standard
			set_variable = { RGOTierThree = 360 } #Expensive
			set_variable = { RGOTierFour = 480 } #Highly Expensive
			set_variable = { RGOTierFive = 600 } #Ultra Expensive
			set_variable = { RGOTierSix = 3000 } #Extreme Fever Dream Projects
			
			set_variable = { RGOElectricity = 360 } #General Electricity Project cost
			set_variable = { RGOFusion = 7000 } #Tokamak Fusion Reactor cost
			
			set_variable = { RGOConstructionLength = 365 } #Days to build 1 RGO
			
			##Tourist Infrastructure Costs#
			set_variable = { TIHistoricalSiteSmallCost = 60 }
			set_variable = { TIHistoricalSiteLargeCost = 240 }
			set_variable = { TIHistoricalSiteReligiousCost = 120 }
			
			set_variable = { TIResortSmallCost = 120 }
			set_variable = { TIResortNominalCost = 240 }
			set_variable = { TIResortLargeCost = 360 }
			
			set_variable = { TINaturalSiteNominalCost = 60 }
			set_variable = { TINaturalSiteLargeCost = 120 }
			
			set_variable = { TIUltraCost = 4000 } #Extreme Fever Dream Projects
			
			#Tourist Infrastructure Values (How much tourist infrastructure each building is worth, determines income, NOT SITE IMPORTANCE OR NUMBER OF TOURISTS)#
			set_variable = { TIHistoricalSiteSmall = 0.25 } #Value of Minor historical site or museum
			set_variable = { TIHistoricalSiteLarge = 0.5 } #Value of Major historical site or historical society
			set_variable = { TIHistoricalSiteReligious = 2 } #Value of Religious historical site
			
			set_variable = { TIResortSmall = 0.25 } #Value of a small resort OR small resort improvement
			set_variable = { TIResortNominal = 0.5 } #Value of a nominal resort OR nominal resort improvement
			set_variable = { TIResortLarge = 0.75 } #Value of a large resort OR large resort improvement
			
			set_variable = { TINaturalSiteNominal = 0.25 } #Value of national park
			set_variable = { TINaturalSiteLarge = 1 } #Value of natural wonder
			
			set_variable = { TIHistoricalUltra = 6 } #Value of fever dream project
			set_variable = { TIResortUltra = 6 } #Value of fever dream project
			set_variable = { TINaturalUltra = 6 } #Value of fever dream project
			
			##STATE CATEGORY COSTS##
			set_variable = { dev0per = 90 }
			set_variable = { dev1per = 48 }
			set_variable = { dev2per = 75 }
			set_variable = { dev3per = 120 }
			set_variable = { dev4per = 200 }
			##Percent category upgrade progress per month##
			set_variable = { upgrade_per_month_fast = 2 } #0-2mil population
			set_variable = { upgrade_per_month_nominal = 1.5 } #3-7mil population
			set_variable = { upgrade_per_month_slow = 1 } #10-19mil population
			set_variable = { upgrade_per_month_marathon = 0.5 } #20+mil population
			
			##TELECOMS COSTS##
			set_variable = { coms1per = 12 } #Installing Digital Switches [1940] #Radio, WW2 Computers
			set_variable = { coms2per = 24 } #Installing Cellular [1960] #Coms II, Consumer Electronics II
			set_variable = { coms3per = 24 } #Installing Fiber Optic [1980] #Coms IV, Interwebs III
			set_variable = { coms4per = 36 } #Installing 4G LTE [2000] #Coms VI, Interwebs VII
			set_variable = { coms5per = 36 } #Installing 5G [2020] #Coms VII, Interwebs XI
			##GRID COSTS##
			set_variable = { grid1per = 12 } #Installing Synchronized Power Grid [1950] #Grid I
			set_variable = { grid2per = 24 } #Installing Modernized Electrical Grid [1970] #Grid III
			set_variable = { grid3per = 24 } #Installing Resiliant Power Grid [1990] #Grid V
			set_variable = { grid4per = 36 } #Installing Smart Grids [2010] #Grid VII
			
			##FLAG SIZE AND POPULATION COST MULTIPLIERS##
			set_variable = { flag_mini_mult = 2 } #micro/small
			set_variable = { flag_nominal_mult = 5 } #nominal/medium
			set_variable = { flag_largo_mult = 13 } #large/massive/gigantic
			
			set_variable = { flag_popsmall_mult = 2 } #Pop1/2
			set_variable = { flag_popmedium_mult = 5 } #Pop3/4/5
			set_variable = { flag_poplargo_mult = 10 } #Pop7/10/15
			set_variable = { flag_overpopulated_mult = 20 } #Pop20+
			
			set_variable = { flag_upgrade_progress_per_month = 10 } #Percent coms upgrade progress per month
			
			##RELIGION##
			set_variable = { AtheistDrift = 0.0002 } #Population Converting to Atheism in Atheist State Per Month
			set_variable = { TheocracyDrift = 0.0005 } #Population Converting to Primary Religion in Theocracy Per Month
			set_variable = { State_ReligionDrift = 0.0003 } #Population Converting to Primary Religion in Countries with State Religion Per Month
			set_variable = { MoralistDrift = 0.0002 } #Population Converting to Primary Religion in Moralist Countries Per Month
			
			set_variable = { MissionStrength = 0.002 } #Population Converted by Missionaries/Missions
			
			set_variable = { MissionCost = 1 } #Money Cost Per Mil Population Per Month to run a mission 

########################DEFINES CALCULATIONS##########################
			set_variable = { eco_output_factor = 1 }
			set_variable = { ecoalpha = eco_health }
			multiply_variable = { ecoalpha = 10 }
			add_to_variable = { eco_output_factor = ecoalpha }
			divide_variable = { eco_output_factor = 11 } #Average between 1 and eco_health x 11. 0 eco_health = 0.09 output factor
			
			set_variable = { eco_output_rate = 0 } #Global temporary effects. Additive with farm_tech and offset by it.
			
			set_variable = { WPTierOneLarge = WPTierOne }
			multiply_variable = { WPTierOneLarge = LargePer }
			set_variable = { WPTierOneBulk = WPTierOne }
			multiply_variable = { WPTierOneBulk = BulkPer }
			
			set_variable = { WPTierTwoLarge = WPTierTwo }
			multiply_variable = { WPTierTwoLarge = LargePer }
			set_variable = { WPTierTwoBulk = WPTierTwo }
			multiply_variable = { WPTierTwoBulk = BulkPer }
			
			set_variable = { WPTierThreeLarge = WPTierThree }
			multiply_variable = { WPTierThreeLarge = LargePer }
			set_variable = { WPTierThreeBulk = WPTierThree }
			multiply_variable = { WPTierThreeBulk = BulkPer }
			
			set_variable = { WPTierFourLarge = WPTierFour }
			multiply_variable = { WPTierFourLarge = LargePer }
			set_variable = { WPTierFourBulk = WPTierFour }
			multiply_variable = { WPTierFourBulk = BulkPer }
			
			set_variable = { WPTierFiveLarge = WPTierFive }
			multiply_variable = { WPTierFiveLarge = LargePer }
			set_variable = { WPTierFiveBulk = WPTierFive }
			multiply_variable = { WPTierFiveBulk = BulkPer }
			
			set_variable = { WPTierSixLarge = WPTierSix }
			multiply_variable = { WPTierSixLarge = LargePer }
			set_variable = { WPTierSixBulk = WPTierSix }
			multiply_variable = { WPTierSixBulk = BulkPer }
			
			set_variable = { WPTierSevenLarge = WPTierSeven }
			multiply_variable = { WPTierSevenLarge = LargePer }
			set_variable = { WPTierSevenBulk = WPTierSeven }
			multiply_variable = { WPTierSevenBulk = BulkPer }
			
			set_variable = { SmallCooldownYears = SmallCooldown }
			set_variable = { LargeCooldownYears = LargeCooldown }
			set_variable = { BulkCooldownYears = BulkCooldown }
			set_variable = { SmallNavalCooldownYears = SmallNavalCooldown }
			set_variable = { NominalNavalCooldownYears = NominalNavalCooldown }
			set_variable = { LargeNavalCooldownYears = LargeNavalCooldown }
			
			multiply_variable = { SmallCooldown = 365 }
			multiply_variable = { LargeCooldown = 365 }
			multiply_variable = { BulkCooldown = 365 }
			multiply_variable = { SmallNavalCooldownYears = 365 }
			multiply_variable = { NominalNavalCooldownYears = 365 }
			multiply_variable = { LargeNavalCooldownYears = 365 }
			
			set_variable = { SupportPerLarge = SupportPer }
			set_variable = { MotorPerLarge = MotorPer }
			set_variable = { UtilityHeliPerLarge = UtilityHeliPer }
			set_variable = { CargoHeliPerLarge = CargoHeliPer }
			set_variable = { LightJetPerLarge = LightJetPer }
			set_variable = { TransportPerLarge = TransportPer }
			set_variable = { ConvoyPerLarge = ConvoyPer }
			set_variable = { InfantryPerLarge = InfantryPer }
			set_variable = { InfantryBulkPerLarge = InfantryBulkPer }
			set_variable = { InfantryPiratePerLarge = InfantryPiratePer }
			set_variable = { DFGPerLarge = DFGPer }
			set_variable = { ATGMPerLarge = ATGMPer }
			set_variable = { AAPerLarge = AAPer }
			set_variable = { SAMPerLarge = SAMPer }
			set_variable = { LtArtyPerLarge = LtArtyPer }
			set_variable = { ArtyPerLarge = ArtyPer }
			set_variable = { HtArtyPerLarge = HtArtyPer }
			set_variable = { LtPerLarge = LtPer }
			set_variable = { MCVPerLarge = MCVPer }
			set_variable = { MBTPerLarge = MBTPer }
			set_variable = { APCPerLarge = APCPer }
			set_variable = { IFVPerLarge = IFVPer }
			set_variable = { ScoutHeliPerLarge = ScoutHeliPer }
			set_variable = { MultirolePerLarge = MultirolePer }
			set_variable = { MultiroleBulkPerLarge = MultiroleBulkPer }
			set_variable = { CVMultirolePerLarge = CVMultirolePer }
			set_variable = { CVMultiroleBulkPerLarge = CVMultiroleBulkPer }
			set_variable = { TrainPerLarge = TrainPer }
			multiply_variable = { SupportPerLarge = LargePer }
			multiply_variable = { MotorPerLarge = LargePer }
			multiply_variable = { UtilityHeliPerLarge = LargePer }
			multiply_variable = { CargoHeliPerLarge = LargePer }
			multiply_variable = { LightJetPerLarge = LargePer }
			multiply_variable = { TransportPerLarge = LargePer }
			multiply_variable = { ConvoyPerLarge = LargePer }
			multiply_variable = { InfantryPerLarge = LargePer }
			multiply_variable = { InfantryBulkPerLarge = LargePer }
			multiply_variable = { InfantryPiratePerLarge = LargePer }
			multiply_variable = { DFGPerLarge = LargePer }
			multiply_variable = { ATGMPerLarge = LargePer }
			multiply_variable = { AAPerLarge = LargePer }
			multiply_variable = { SAMPerLarge = LargePer }
			multiply_variable = { LtArtyPerLarge = LargePer }
			multiply_variable = { ArtyPerLarge = LargePer }
			multiply_variable = { HtArtyPerLarge = LargePer }
			multiply_variable = { LtPerLarge = LargePer }
			multiply_variable = { MCVPerLarge = LargePer }
			multiply_variable = { MBTPerLarge = LargePer }
			multiply_variable = { APCPerLarge = LargePer }
			multiply_variable = { IFVPerLarge = LargePer }
			multiply_variable = { ScoutHeliPerLarge = LargePer }
			multiply_variable = { MultirolePerLarge = LargePer }
			multiply_variable = { MultiroleBulkPerLarge = LargePer }
			multiply_variable = { CVMultirolePerLarge = LargePer }
			multiply_variable = { CVMultiroleBulkPerLarge = LargePer }
			multiply_variable = { TrainPerLarge = LargePer }
			
			set_variable = { SupportPerBulk = SupportPer }
			set_variable = { MotorPerBulk = MotorPer }
			set_variable = { UtilityHeliPerBulk = UtilityHeliPer }
			set_variable = { CargoHeliPerBulk = CargoHeliPer }
			set_variable = { LightJetPerBulk = LightJetPer }
			set_variable = { TransportPerBulk = TransportPer }
			set_variable = { ConvoyPerBulk = ConvoyPer }
			set_variable = { InfantryPerBulk = InfantryPer }
			set_variable = { InfantryBulkPerBulk = InfantryBulkPer }
			set_variable = { InfantryPiratePerBulk = InfantryPiratePer }
			set_variable = { DFGPerBulk = DFGPer }
			set_variable = { ATGMPerBulk = ATGMPer }
			set_variable = { AAPerBulk = AAPer }
			set_variable = { SAMPerBulk = SAMPer }
			set_variable = { LtArtyPerBulk = LtArtyPer }
			set_variable = { ArtyPerBulk = ArtyPer }
			set_variable = { HtArtyPerBulk = HtArtyPer }
			set_variable = { LtPerBulk = LtPer }
			set_variable = { MCVPerBulk = MCVPer }
			set_variable = { MBTPerBulk = MBTPer }
			set_variable = { APCPerBulk = APCPer }
			set_variable = { IFVPerBulk = IFVPer }
			set_variable = { ScoutHeliPerBulk = ScoutHeliPer }
			set_variable = { MultirolePerBulk = MultirolePer }
			set_variable = { MultiroleBulkPerBulk = MultiroleBulkPer }
			set_variable = { CVMultirolePerBulk = CVMultirolePer }
			set_variable = { CVMultiroleBulkPerBulk = CVMultiroleBulkPer }
			set_variable = { TrainPerBulk = TrainPer }
			multiply_variable = { SupportPerBulk = BulkPer }
			multiply_variable = { MotorPerBulk = BulkPer }
			multiply_variable = { UtilityHeliPerBulk = BulkPer }
			multiply_variable = { CargoHeliPerBulk = BulkPer }
			multiply_variable = { LightJetPerBulk = BulkPer }
			multiply_variable = { TransportPerBulk = BulkPer }
			multiply_variable = { ConvoyPerBulk = BulkPer }
			multiply_variable = { InfantryPerBulk = BulkPer }
			multiply_variable = { InfantryBulkPerBulk = BulkPer }
			multiply_variable = { InfantryPiratePerBulk = BulkPer }
			multiply_variable = { DFGPerBulk = BulkPer }
			multiply_variable = { ATGMPerBulk = BulkPer }
			multiply_variable = { AAPerBulk = BulkPer }
			multiply_variable = { SAMPerBulk = BulkPer }
			multiply_variable = { LtArtyPerBulk = BulkPer }
			multiply_variable = { ArtyPerBulk = BulkPer }
			multiply_variable = { HtArtyPerBulk = BulkPer }
			multiply_variable = { LtPerBulk = BulkPer }
			multiply_variable = { MCVPerBulk = BulkPer }
			multiply_variable = { MBTPerBulk = BulkPer }
			multiply_variable = { APCPerBulk = BulkPer }
			multiply_variable = { IFVPerBulk = BulkPer }
			multiply_variable = { ScoutHeliPerBulk = BulkPer }
			multiply_variable = { MultirolePerBulk = BulkPer }
			multiply_variable = { MultiroleBulkPerBulk = BulkPer }
			multiply_variable = { CVMultirolePerBulk = BulkPer }
			multiply_variable = { CVMultiroleBulkPerBulk = BulkPer }
			multiply_variable = { TrainPerBulk = BulkPer }
			
			set_variable = { UPC_pop1 = dev0per }
			set_variable = { UPC_pop2 = dev0per }
			set_variable = { UPC_pop3 = dev0per }
			set_variable = { UPC_pop4 = dev0per }
			set_variable = { UPC_pop5 = dev0per }
			set_variable = { UPC_pop7 = dev0per }
			set_variable = { UPC_pop10 = dev0per }
			set_variable = { UPC_pop15 = dev0per }
			set_variable = { UPC_pop20 = dev0per }
			multiply_variable = { UPC_pop1 = 1 }
			multiply_variable = { UPC_pop2 = 2 }
			multiply_variable = { UPC_pop3 = 3 }
			multiply_variable = { UPC_pop4 = 4 }
			multiply_variable = { UPC_pop5 = 5 }
			multiply_variable = { UPC_pop7 = 7 }
			multiply_variable = { UPC_pop10 = 10 }
			multiply_variable = { UPC_pop15 = 15 }
			multiply_variable = { UPC_pop20 = 20 }
			
			set_variable = { UPC_pop1dev1 = dev1per }
			set_variable = { UPC_pop2dev1 = dev1per }
			set_variable = { UPC_pop3dev1 = dev1per }
			set_variable = { UPC_pop4dev1 = dev1per }
			set_variable = { UPC_pop5dev1 = dev1per }
			set_variable = { UPC_pop7dev1 = dev1per }
			set_variable = { UPC_pop10dev1 = dev1per }
			set_variable = { UPC_pop15dev1 = dev1per }
			set_variable = { UPC_pop20dev1 = dev1per }
			multiply_variable = { UPC_pop1dev1 = 1 }
			multiply_variable = { UPC_pop2dev1 = 2 }
			multiply_variable = { UPC_pop3dev1 = 3 }
			multiply_variable = { UPC_pop4dev1 = 4 }
			multiply_variable = { UPC_pop5dev1 = 5 }
			multiply_variable = { UPC_pop7dev1 = 7 }
			multiply_variable = { UPC_pop10dev1 = 10 }
			multiply_variable = { UPC_pop15dev1 = 15 }
			multiply_variable = { UPC_pop20dev1 = 20 }
			
			set_variable = { UPC_pop1dev2 = dev2per }
			set_variable = { UPC_pop2dev2 = dev2per }
			set_variable = { UPC_pop3dev2 = dev2per }
			set_variable = { UPC_pop4dev2 = dev2per }
			set_variable = { UPC_pop5dev2 = dev2per }
			set_variable = { UPC_pop7dev2 = dev2per }
			set_variable = { UPC_pop10dev2 = dev2per }
			set_variable = { UPC_pop15dev2 = dev2per }
			set_variable = { UPC_pop20dev2 = dev2per }
			multiply_variable = { UPC_pop1dev2 = 1 }
			multiply_variable = { UPC_pop2dev2 = 2 }
			multiply_variable = { UPC_pop3dev2 = 3 }
			multiply_variable = { UPC_pop4dev2 = 4 }
			multiply_variable = { UPC_pop5dev2 = 5 }
			multiply_variable = { UPC_pop7dev2 = 7 }
			multiply_variable = { UPC_pop10dev2 = 10 }
			multiply_variable = { UPC_pop15dev2 = 15 }
			multiply_variable = { UPC_pop20dev2 = 20 }
			
			set_variable = { UPC_pop1dev3 = dev3per }
			set_variable = { UPC_pop2dev3 = dev3per }
			set_variable = { UPC_pop3dev3 = dev3per }
			set_variable = { UPC_pop4dev3 = dev3per }
			set_variable = { UPC_pop5dev3 = dev3per }
			set_variable = { UPC_pop7dev3 = dev3per }
			set_variable = { UPC_pop10dev3 = dev3per }
			set_variable = { UPC_pop15dev3 = dev3per }
			set_variable = { UPC_pop20dev3 = dev3per }
			multiply_variable = { UPC_pop1dev3 = 1 }
			multiply_variable = { UPC_pop2dev3 = 2 }
			multiply_variable = { UPC_pop3dev3 = 3 }
			multiply_variable = { UPC_pop4dev3 = 4 }
			multiply_variable = { UPC_pop5dev3 = 5 }
			multiply_variable = { UPC_pop7dev3 = 7 }
			multiply_variable = { UPC_pop10dev3 = 10 }
			multiply_variable = { UPC_pop15dev3 = 15 }
			multiply_variable = { UPC_pop20dev3 = 20 }
			
			set_variable = { UPC_pop1dev4 = dev4per }
			set_variable = { UPC_pop2dev4 = dev4per }
			set_variable = { UPC_pop3dev4 = dev4per }
			set_variable = { UPC_pop4dev4 = dev4per }
			set_variable = { UPC_pop5dev4 = dev4per }
			set_variable = { UPC_pop7dev4 = dev4per }
			set_variable = { UPC_pop10dev4 = dev4per }
			set_variable = { UPC_pop15dev4 = dev4per }
			set_variable = { UPC_pop20dev4 = dev4per }
			multiply_variable = { UPC_pop1dev4 = 1 }
			multiply_variable = { UPC_pop2dev4 = 2 }
			multiply_variable = { UPC_pop3dev4 = 3 }
			multiply_variable = { UPC_pop4dev4 = 4 }
			multiply_variable = { UPC_pop5dev4 = 5 }
			multiply_variable = { UPC_pop7dev4 = 7 }
			multiply_variable = { UPC_pop10dev4 = 10 }
			multiply_variable = { UPC_pop15dev4 = 15 }
			multiply_variable = { UPC_pop20dev4 = 20 }
			
			#No Building Slot Room Cost Reduction#
			#Reduce cost to upgrade because you gain no extra, or reduced, building slots at these levels
			multiply_variable = { UPC_pop20 = 0.75 }
			
			multiply_variable = { UPC_pop15dev1 = 0.9 }
			multiply_variable = { UPC_pop20dev1 = 0.75 }
			
			multiply_variable = { UPC_pop15dev2 = 0.75 }
			multiply_variable = { UPC_pop20dev2 = 0.6 }
			
			multiply_variable = { UPC_pop10dev3 = 0.9 }
			multiply_variable = { UPC_pop15dev3 = 0.75 }
			multiply_variable = { UPC_pop20dev3 = 0.6 }
			
			
			set_variable = { MercDuration = MercYears }
			multiply_variable = { MercDuration = 365 }
			
			set_variable = { MercMilitiaManpowerPrice = MercMilitia }
			set_variable = { MercLightManpowerPrice = MercLight }
			set_variable = { MercMobileManpowerPrice = MercMobile }
			set_variable = { MercProManpowerPrice = MercPro }
			multiply_variable = { MercMilitiaManpowerPrice = MercManpowerPrice }
			multiply_variable = { MercLightManpowerPrice = MercManpowerPrice }
			multiply_variable = { MercMobileManpowerPrice = MercManpowerPrice }
			multiply_variable = { MercProManpowerPrice = MercManpowerPrice }
########################END OF CALCULATIONS##########################
			#####ARMS SALES TECH STARTING LEVELS#####
			set_global_flag = WP_CAP_tech_2
			set_global_flag = WP_CAP_tech_1
			
			set_global_flag = WP_CUM_tech_2
			set_global_flag = WP_CUM_tech_1
			
			set_global_flag = WP_MAO_tech_1
			
			set_global_flag = WP_IND_tech_1
					


########################END OF CWIC DEFINES###########################
######################################################################

			#### SPACE RACE ####
			clear_array = global.space_race_array_country
			clear_array = global.space_race_array_num_decisions
			clear_array = global.top_space_race_array_country
			clear_array = global.top_space_race_array_num_decisions
		    every_country = {
				#Econ 3.0 Start
				set_variable = { national_total_lower_class_pop = 0 }
				set_variable = { national_total_middle_class_pop = 0 }
				set_variable = { national_total_upper_middle_class_pop = 0 }
				set_variable = { national_total_upper_class_pop = 0 }

				set_variable = { national_total_lower_class_pay = 0 }
				set_variable = { national_total_middle_class_pay = 0 }
				set_variable = { national_total_upper_middle_class_pay = 0 }
				set_variable = { national_total_upper_class_pay = 0 }

				set_variable = { national_total_employed_pops = 0 }

				for_each_scope_loop = {	
					array = owned_states

					set_employment_in_state = yes
				}
				set_starting_info = yes
				#gdp_test_script_take_5 = yes
				#Econ 3.0 End
				starting_policies = yes
				set_variable = { num_space_race_decisions = 0}
				ic_pulse = yes
				
				add_to_variable = { decryptTotal = 1 }
				add_to_variable = { encryptTotal = 1 }
				set_country_flag = bonds.25
				army_experience = 50
				navy_experience = 50
				set_variable = { policy_legislation = 1 }
				if = {
					limit = {
						NOT = {
							#Christian#
							has_country_flag = PR_ChristianityCatholic 
							has_country_flag = PR_ChristianityProtestant 
							has_country_flag = PR_ChristianityOrthodox 
							has_country_flag = PR_ChristianityOriental 
							#Judaic#
							has_country_flag = PR_Judaism 
							#Islamic#
							has_country_flag = PR_IslamSunni 
							has_country_flag = PR_IslamShia 
							has_country_flag = PR_IslamIbadi 
							#Buddhism#
							has_country_flag = PR_BuddhismVajrayana 
							has_country_flag = PR_BuddhismMahayana 
							has_country_flag = PR_BuddhismThereveda 
							#Eastern#
							has_country_flag = PR_Shinto 
							has_country_flag = PR_TraditionalEastern 
							has_country_flag = PR_Confucian 
							#Indo-Iranian#
							has_country_flag = PR_Hindu 
							has_country_flag = PR_Sikh 
							has_country_flag = PR_Navayana 
							has_country_flag = PR_TraditionalIranian 
							#Irreligious#
							has_country_flag = PR_Irreligious 
							has_country_flag = PR_Atheist 
							#Minor/Esoteric#
							has_country_flag = PR_ZionistChristian 
							has_country_flag = PR_Statist 
							has_country_flag = PR_CultistSafe 
							has_country_flag = PR_CultistFatal
							has_country_flag = PR_TraditionalAfrican
							has_country_flag = PR_TraditionalAmerican
							has_country_flag = PR_TraditionalOceanic
							has_country_flag = PR_Nautralist
							has_country_flag = PR_Messianic 
							has_country_flag = PR_Other 
						}
					}
					major_religion_placeholder = yes
				}
				add_to_array = {
					country_politics_list = 52	#Idea Grid
				}
				add_to_array = {
					country_politics_list = 1	#Normal Policies
				}
				add_to_array = {
					country_politics_list = 2	#Social Policies
				}
				add_to_array = {
					country_politics_list = 3	#Fiscal Overview
				}
				#add_to_array = {
				#	country_politics_list = 4	#Detailed Income Info
				#}
				#add_to_array = {
				#	country_politics_list = 5	#Detailed Expense Info
				#}
				#add_to_array = {
				#	country_politics_list = 6	#Demographic Info
				#}
				if = {
					limit = {
						tag = USA
					}
					add_to_array = {
						country_politics_list = 50	#US CONGRESS
					}
				}
				if = {
					limit = {
						tag = PRC
					}
					add_to_array = {
						country_politics_list = 51	#CPC
					}
				}
				if = {
					limit = {
						has_country_flag = arab_league_member
					}
					add_to_array = {
						country_politics_list = 25	#ARAB LEAGUE
					}
				}
				if = {
					limit = {
						tag = KOR
					}
					add_to_array = {
						country_politics_list = 60	#Election
					}
				}
			    if = { limit = { has_tech = jet_interceptor1 } add_ideas = interceptor_cost_1_idea }
				if = { limit = { has_tech = jet_interceptor2 } add_ideas = interceptor_cost_2_idea }
			    if = { limit = { has_tech = jet_interceptor3 } add_ideas = interceptor_cost_3_idea }
				if = { limit = { has_tech = jet_interceptor4 } add_ideas = interceptor_cost_4_idea }	
                if = { limit = { has_tech = jet_multirole1 } add_ideas = multirole_cost_1_idea }
				if = { limit = { has_tech = jet_multirole2 } add_ideas = multirole_cost_2_idea }
				if = { limit = { has_tech = jet_multirole3 } add_ideas = multirole_cost_3_idea }
				if = { limit = { has_tech = jet_multirole4 } add_ideas = multirole_cost_4_idea }
				if = { limit = { has_tech = cv_jet_multirole1 } add_ideas = cvmultirole_cost_1_idea }
				if = { limit = { has_tech = cv_jet_multirole2 } add_ideas = cvmultirole_cost_2_idea }
				if = { limit = { has_tech = cv_jet_multirole3 } add_ideas = cvmultirole_cost_3_idea }
				if = { limit = { has_tech = cv_jet_multirole4 } add_ideas = cvmultirole_cost_4_idea }
				if = { limit = { has_tech = jet_CAS1 } add_ideas = casjet_cost_1_idea }
				if = { limit = { has_tech = jet_CAS2 } add_ideas = casjet_cost_2_idea }
				if = { limit = { has_tech = jet_CAS3 } add_ideas = casjet_cost_3_idea }
				if = { limit = { has_tech = jet_CAS4 } add_ideas = casjet_cost_4_idea }
				if = { limit = { has_tech = cv_jet_CAS1 } add_ideas = cvcasjet_cost_1_idea }
				if = { limit = { has_tech = cv_jet_CAS2 } add_ideas = cvcasjet_cost_2_idea }
				if = { limit = { has_tech = cv_jet_CAS3 } add_ideas = cvcasjet_cost_3_idea }
				if = { limit = { has_tech = cv_jet_CAS4 } add_ideas = cvcasjet_cost_4_idea }
				if = { limit = { has_tech = transport1 } add_ideas = transportplane_cost_1_idea }
				if = { limit = { has_tech = transport2 } add_ideas = transportplane_cost_2_idea }
				if = { limit = { has_tech = transport3 } add_ideas = transportplane_cost_3_idea }
				if = { limit = { has_tech = transport4 } add_ideas = transportplane_cost_4_idea }
				if = { limit = { has_tech = naval_bomber1 } add_ideas = navalbomber_cost_1_idea }
				if = { limit = { has_tech = naval_bomber2 } add_ideas = navalbomber_cost_2_idea }
				if = { limit = { has_tech = naval_bomber3 } add_ideas = navalbomber_cost_3_idea }
				if = { limit = { has_tech = naval_bomber4 } add_ideas = navalbomber_cost_4_idea }
				if = { limit = { has_tech = jet_tactical_bomber1 } add_ideas = jettacbomber_cost_1_idea }
				if = { limit = { has_tech = jet_tactical_bomber2 } add_ideas = jettacbomber_cost_2_idea }
				if = { limit = { has_tech = jet_tactical_bomber3 } add_ideas = jettacbomber_cost_3_idea }
				if = { limit = { has_tech = jet_tactical_bomber4 } add_ideas = jettacbomber_cost_4_idea }
				if = { limit = { has_tech = jet_strategic_bomber1 } add_ideas = jetstratbomber_cost_1_idea }
				if = { limit = { has_tech = jet_strategic_bomber2 } add_ideas = jetstratbomber_cost_2_idea }
				if = { limit = { has_tech = jet_strategic_bomber3 } add_ideas = jetstratbomber_cost_3_idea }
				if = { limit = { has_tech = jet_strategic_bomber4 } add_ideas = jetstratbomber_cost_4_idea }
            }
			SOV = {set_variable = { current_country_state_decision = 91.id } }
			SAF = {
				set_variable = { total_pop_k_prior = 0 }
				every_owned_state = { add_to_variable = { SAF.total_pop_k_prior = state_population_k } }
				set_variable = { quarterly_white_immigration_k = 15 }
				set_variable = { quarterly_white_immigration = 15000 } 
				set_variable = { saf_white_growth = 0.13 }
				set_variable = { saf_colored_growth = 0.12 } 
				set_variable = { saf_asian_growth = 0.04 } 
				set_variable = { saf_bantu_growth = 0.71 }

				set_variable = { white_percentage = 0.21 }
				set_variable = { colored_percentage = 0.09 }
				set_variable = { asian_percentage = 0.03 }
				set_variable = { bantu_percentage = 0.67 }

				set_variable = { white_population = 0.21 }
				set_variable = { colored_population = 0.09 }   
				set_variable = { asian_population = 0.03 }    
				set_variable = { bantu_population = 0.67 } 

				set_variable = { white_population_prior = total_pop_k_prior }
				set_variable = { colored_population_prior = total_pop_k_prior }
				set_variable = { asian_population_prior = total_pop_k_prior }
				set_variable = { bantu_population_prior = total_pop_k_prior }

				multiply_variable = { white_population_prior = white_percentage }
				round_variable = white_population_prior

				multiply_variable = { colored_population_prior = colored_percentage }
				round_variable = colored_population_prior

				multiply_variable = { asian_population_prior = asian_percentage }
				round_variable = asian_population_prior

				multiply_variable = { bantu_population_prior = bantu_percentage }
				round_variable = bantu_population_prior
				create_pie_chart_south_africa = yes				
			}
			#Flag Building History Initialization#
			#This runs a cleanup in the history files to make modding states easier. All previous coms from seperate startdates are added and to prevent errors and duplicate flags this script cleans up all inferior flags
			every_state = {
				state_on_startup_initialization = yes
				add_to_array = {
					OWNER.acceptedculturelist = culture^0
				}
				add_to_array = {
					OWNER.acceptedculturelist = culture^1
				}
				add_to_array = {
					OWNER.acceptedculturelist = culture^2
				}
				add_to_array = {
					OWNER.acceptedculturelist = culture^3
				}
				if = {
					limit = {
						date < 1950.1.1
					}
					initialize_1949_setup = yes
				}
				else_if = {
					limit = {
						date < 1961.1.1
						date > 1959.1.1
					}
					initialize_1960_setup = yes
				}
				else_if = {
					limit = {
						date < 1974.1.1
						date > 1972.1.1
					}
					initialize_1973_setup = yes
				}
				else_if = {
					limit = {
						date < 1981.1.1
						date > 1979.1.1
					}
					initialize_1980_setup = yes
				}
				else_if = {
					limit = {
						date < 1992.1.1
						date > 1990.1.1
					}
					initialize_1991_setup = yes
				}
				else_if = {
					limit = {
						date < 2001.1.1
						date > 1999.1.1
					}
					initialize_2000_setup = yes
				}
			}
            #Various
			YUG = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					country_event = CRO_insurgency_options.0
				}
			}			
			CHI = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					activate_mission = The_Shanghai_Campaign
				}
			}	
			
			AFG = {
				army_experience = 250
				navy_experience = 250
			}
			VTC = {
				army_experience = 666666
				navy_experience = 666666
				air_experience = 666666
				#country_event = TUTOR.666
			}
			HOK = {
				army_experience = 250
				navy_experience = 250
			}
			ISR = {
				if = {
					limit = {
						has_start_date < 1950.01.01
					}
					country_event = israel.10
					country_event = { id = israel.9999 days = 1 }
				}
                for_loop_effect = {
                    end = acceptedculturelist^num
                    value = v
                    if = {
                        limit = {
							check_variable = { acceptedculturelist^v = 205 }
                        }
                        set_variable = {
							acceptedculturelist^v = 0
						}
                    }
                }
			}
			SOV = {
				set_country_flag = Is_In_Sphere
				set_variable = {
					Sphere_Leader = SOV.id
				}
				POL = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				ROM = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				ALB = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				MON = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				SIK = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				BUL = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				CZE = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				DDR = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				HUN = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = SOV.id
					}
				}
				add_to_array = { sphere_tag_list = SOV.id }
				add_to_array = { sphere_tag_list = POL.id }
				add_to_array = { sphere_tag_list = ROM.id }
				add_to_array = { sphere_tag_list = HUN.id }
				add_to_array = { sphere_tag_list = CZE.id }
				add_to_array = { sphere_tag_list = DDR.id }
				add_to_array = { sphere_tag_list = ALB.id }
				add_to_array = { sphere_tag_list = MON.id }
				add_to_array = { sphere_tag_list = SIK.id }
				add_to_array = { sphere_tag_list = BUL.id }
				
			}
			USA = {
				country_event = {
					id = Primary_Season.1
					days = 953
				}
				set_country_flag = Is_In_Sphere
				set_variable = {
					Sphere_Leader = USA.id
				}
				ELS = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				GUA = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				CUB = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				COS = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				PAN = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				JAP = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				KOR = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				LIB = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				HON = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				PHI = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				HAI = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				DOM = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				ECU = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				COL = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				PRU = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				CHL = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				VEN = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				NIC = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				BOL = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				URG = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				PAR = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				MEX = {
					set_country_flag = Is_In_Sphere
					set_variable = {
						Sphere_Leader = USA.id
					}
				}
				set_variable = { var = domestic_influence_amount value = 100 }
				startup_influence = yes
				add_to_array = { sphere_tag_list = USA.id }
				add_to_array = { sphere_tag_list = ELS.id }
				add_to_array = { sphere_tag_list = GUA.id }
				add_to_array = { sphere_tag_list = CUB.id }
				add_to_array = { sphere_tag_list = COS.id }
				add_to_array = { sphere_tag_list = PAN.id }
				add_to_array = { sphere_tag_list = JAP.id }
				add_to_array = { sphere_tag_list = KOR.id }
				add_to_array = { sphere_tag_list = LIB.id }
				add_to_array = { sphere_tag_list = HON.id }
				add_to_array = { sphere_tag_list = PHI.id }
				add_to_array = { sphere_tag_list = HAI.id }
				add_to_array = { sphere_tag_list = DOM.id }
				add_to_array = { sphere_tag_list = ECU.id }
				add_to_array = { sphere_tag_list = COL.id }
				add_to_array = { sphere_tag_list = PRU.id }
				add_to_array = { sphere_tag_list = CHL.id }
				add_to_array = { sphere_tag_list = VEN.id }
				add_to_array = { sphere_tag_list = NIC.id }
				add_to_array = { sphere_tag_list = BOL.id }
				add_to_array = { sphere_tag_list = URG.id }
				add_to_array = { sphere_tag_list = PAR.id }
				add_to_array = { sphere_tag_list = MEX.id }
				Key_Issues_Set_Startup = yes
				army_experience = 100
				navy_experience = 100
                for_loop_effect = {
                    end = acceptedculturelist^num
                    value = v
                    if = {
                        limit = {
                            OR = {
								check_variable = { acceptedculturelist^v = 7 }
								check_variable = { acceptedculturelist^v = 8 }
								check_variable = { acceptedculturelist^v = 9 }
							}
                        }
                        set_variable = {
							acceptedculturelist^v = 0
						}
                    }
                }
			}
			SOV = {
				army_experience = 100
				navy_experience = 100
			}
			PRC = {
				army_experience = 50
			}
			RCG = {
				army_experience = 50
			}
			RAJ = {
				army_experience = 50
			}
			PAK = {
				army_experience = 50
			}
			KPA = {
				army_experience = 50
				navy_experience = 50
			}
			KOR = {
				army_experience = 50
				navy_experience = 50
			}
			ENG = {
				army_experience = 50
				navy_experience = 200
			}
			YUG = {
				army_experience = 50
			}
			ITA = {
				army_experience = 50
			}
			SPR = {
				army_experience = 50
			}
			XSM = {
				army_experience = 50
			}
			ISR = {
				army_experience = 50
			}
            #UN Setup+Trade+AL
			UNS = {
				export_script_for_pool = yes
				activate_mission = ic_trade
				add_to_array = { UNS.un_option_list = 0 }
				add_to_array = { UNS.un_option_list = 1 }
				add_to_array = { UNS.un_option_list = 2 }
				add_to_array = { UNS.un_option_list = 3 }
				add_to_array = { UNS.un_option_list = 4 }
				add_to_array = { UNS.un_option_list = 5 }
				add_to_array = { UNS.un_option_list = 6 }
				add_to_array = { UNS.un_option_list = 7 }
				add_to_array = { UNS.un_option_list = 8 }
				add_to_array = { UNS.un_option_list = 9 }
				add_to_array = { UNS.un_option_list = 10 }
				add_to_array = { UNS.un_option_list = 11 }
				add_to_array = { UNS.un_option_list = 12 }
				add_to_array = { UNS.un_option_list = 13 }
				add_to_array = { UNS.un_option_list = 14 }
				add_to_array = { UNS.un_option_list = 15 }
				add_to_array = { UNS.un_option_list = 16 }

				add_to_array = { UNS.un_option_list = 17 }	#Application to Join
			}

			UNS = {
				add_to_array = { UNS.arab_league_option_list = 0 }
				add_to_array = { UNS.arab_league_option_list = 1 }
				add_to_array = { UNS.arab_league_option_list = 2 }
				add_to_array = { UNS.arab_league_option_list = 3 }
				add_to_array = { UNS.arab_league_option_list = 4 }
				add_to_array = { UNS.arab_league_option_list = 5 }
				add_to_array = { UNS.arab_league_option_list = 6 }
				add_to_array = { UNS.arab_league_option_list = 7 }
				add_to_array = { UNS.arab_league_option_list = 8 }
				add_to_array = { UNS.arab_league_option_list = 9 }
				add_to_array = { UNS.arab_league_option_list = 10 }
				add_to_array = { UNS.arab_league_option_list = 11 }
				add_to_array = { UNS.arab_league_option_list = 12 }
				add_to_array = { UNS.arab_league_option_list = 13 }
				add_to_array = { UNS.arab_league_option_list = 14 }
				add_to_array = { UNS.arab_league_option_list = 15 }
				add_to_array = { UNS.arab_league_option_list = 16 }
				add_to_array = { UNS.arab_league_option_list = 17 }
				add_to_array = { UNS.arab_league_option_list = 18 }
				add_to_array = { UNS.arab_league_option_list = 19 }
				add_to_array = { UNS.arab_league_option_list = 20 }
				add_to_array = { UNS.arab_league_option_list = 21 }
				add_to_array = { UNS.arab_league_option_list = 22 }
				add_to_array = { UNS.arab_league_option_list = 23 }
				add_to_array = { UNS.arab_league_option_list = 24 }
				add_to_array = { UNS.arab_league_option_list = 25 }
				add_to_array = { UNS.arab_league_option_list = 26 }
				add_to_array = { UNS.arab_league_option_list = 27 }
				add_to_array = { UNS.arab_league_option_list = 28 }
				

				add_to_array = { UNS.arab_league_influence_option_list = 0 }
				add_to_array = { UNS.arab_league_influence_option_list = 1 }
				add_to_array = { UNS.arab_league_influence_option_list = 2 }
				add_to_array = { UNS.arab_league_influence_option_list = 3 }
				add_to_array = { UNS.arab_league_influence_option_list = 4 }
				add_to_array = { UNS.arab_league_influence_option_list = 5 }
				add_to_array = { UNS.arab_league_influence_option_list = 6 }
				add_to_array = { UNS.arab_league_influence_option_list = 7 }
				add_to_array = { UNS.arab_league_influence_option_list = 8 }
				add_to_array = { UNS.arab_league_influence_option_list = 9 }
				add_to_array = { UNS.arab_league_influence_option_list = 10 }
				add_to_array = { UNS.arab_league_influence_option_list = 11 }
				add_to_array = { UNS.arab_league_influence_option_list = 12 }
				add_to_array = { UNS.arab_league_influence_option_list = 13 }
				

				add_to_array = { UNS.arab_league_relations_list = 0 }
				add_to_array = { UNS.arab_league_relations_list = 1 }
				add_to_array = { UNS.arab_league_relations_list = 2 }
				add_to_array = { UNS.arab_league_relations_list = 3 }
				add_to_array = { UNS.arab_league_relations_list = 4 }
				add_to_array = { UNS.arab_league_relations_list = 5 }
				add_to_array = { UNS.arab_league_relations_list = 6 }

				add_to_array = { UNS.arab_league_relations_list = 7 }
				add_to_array = { UNS.arab_league_relations_list = 8 }
				add_to_array = { UNS.arab_league_relations_list = 9 }
				add_to_array = { UNS.arab_league_relations_list = 10 }
				add_to_array = { UNS.arab_league_relations_list = 11 }
				add_to_array = { UNS.arab_league_relations_list = 12 }
				add_to_array = { UNS.arab_league_relations_list = 13 }
				add_to_array = { UNS.arab_league_relations_list = 14 }
				
			}

			MOR = {
				MOR_percentage_update_calc = yes
			}
			ARG = { add_ideas = un_member }
			AST = { add_ideas = un_member }
			BEL = { add_ideas = un_member }
			BOL = { add_ideas = un_member }
			BRA = { add_ideas = un_member }
			CAN = { add_ideas = un_member }
			CHL = { add_ideas = un_member }
			COL = { add_ideas = un_member }
			COS = { add_ideas = un_member }
			CUB = { add_ideas = un_member }
			CZE = { add_ideas = un_member }
			DEN = { add_ideas = un_member }
			DOM = { add_ideas = un_member }
			ECU = { add_ideas = un_member }
			EGY = { add_ideas = un_member } 
			ELS = { add_ideas = un_member }
			ETH = { add_ideas = un_member }
			GRE = { add_ideas = un_member }
			GUA = { add_ideas = un_member }
			HAI = { add_ideas = un_member }
			HON = { add_ideas = un_member }
			RAJ = { add_ideas = un_member }
			PER = { add_ideas = un_member }
			IRQ = { add_ideas = un_member }
			LEB = { add_ideas = un_member }
			LIB = { add_ideas = un_member }
			LUX = { add_ideas = un_member }
			MEX = { add_ideas = un_member }
			HOL = { add_ideas = un_member }
			NZL = { add_ideas = un_member }
			NIC = { add_ideas = un_member }
			NOR = { add_ideas = un_member }
			PAN = { add_ideas = un_member }
			PAR = { add_ideas = un_member }
			PRU = { add_ideas = un_member }
			PHI = { add_ideas = un_member }
			POL = { add_ideas = un_member }
			SAU = { add_ideas = un_member }
			SYR = { add_ideas = un_member }
			TUR = { add_ideas = un_member }
			SAF = { add_ideas = un_member }
			URG = { add_ideas = un_member }
			VEN = { add_ideas = un_member }
			YUG = { add_ideas = un_member }
			AFG = { add_ideas = un_member }
			ICE = { add_ideas = un_member }
			SIA = { add_ideas = un_member }
			SWE = { add_ideas = un_member }
			PAK = { add_ideas = un_member }
			YEM = { add_ideas = un_member }
			#BEM = { add_ideas = un_member }

            #Pulse Set
            random_other_country = {
				limit = { is_ai = no }
				close_all_windows = yes
				news_event = tutorial.1000
				country_event = { id = tutorial.2000 hours = 1 }
				#country_event = tutorial.1
			}
			UNS = {
				standard_deviation_for_industrial_base = yes
			}
			COL = {
				country_event = COL_pol.1
			}

            #Additional Other
			every_country = {
				country_event = focus_check.1
			}
			SOV = {
				country_event = sov.1001
			}
			VTC = {
				set_country_flag = ic_pulse_one_flag
			}	
			FRA = {
				set_division_template_lock = { division_template = "Légion Étrangère Française" is_locked = yes }	
			}
			BUL = {
				if = {
					limit = {
						date < 1950.1.1
					}
					country_event = { id = BUL.100 days = 40 }
				}
			}
			PAK = {
				779 = {
					add_dynamic_modifier = {
						modifier = autonomous_state
					}		
				}
			}
			VIE = {
				if = {
					limit = {
						date < 1950.1.1
					}
					country_event = Elysee_Accords.1
					country_event = { id = Initial_CuongDe.1 days = 7 }
				}
			}
			every_state = {
				limit = {
					is_core_of = VIN
				}
				add_claim_by = FRE
			}
			### ENG DIV LIMIT STUFF
			set_variable = {
				div_limit = num_of_factories
			}
			multiply_variable = {
				div_limit = -0.05
			}  
			######################
        }
    }
}